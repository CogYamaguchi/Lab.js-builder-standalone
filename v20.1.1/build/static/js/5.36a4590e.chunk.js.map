{"version":3,"sources":["components/ComponentOptions/components/Content/Canvas/components/form/AddDropDown.js","components/ComponentOptions/components/Content/Canvas/components/form/Dimensions/index.js","components/ComponentOptions/components/Content/Canvas/components/form/Layers.js","components/ComponentOptions/components/Content/Canvas/components/form/ColorDropDown/index.js","components/ComponentOptions/components/Content/Canvas/components/form/StrokeWidthDropDown.js","components/ComponentOptions/components/Content/Canvas/components/form/Details/AoiOptions.js","components/ComponentOptions/components/Content/Canvas/components/form/Details/ImageOptions.js","components/ComponentOptions/components/Content/Canvas/components/form/Details/TextOptions.js","components/ComponentOptions/components/Content/Canvas/components/form/Details/index.js","components/ComponentOptions/components/Content/Canvas/components/form/Style.js","components/ComponentOptions/components/Content/Canvas/components/fabric/background.js","components/ComponentOptions/components/Content/Canvas/logic.js","components/ComponentOptions/components/Content/Canvas/components/fabric/index.js","components/ComponentOptions/components/Content/Canvas/components/fabric/overlay.js","components/ComponentOptions/components/Content/Canvas/editor.js"],"names":["AddDropDown","addHandler","cloneHandler","removeHandler","selection","id","fileSelector","React","createRef","ButtonGroup","UncontrolledButtonDropdown","direction","DropdownToggle","outline","color","Icon","icon","style","position","top","DropdownMenu","DropdownItem","header","onClick","divider","content","a","current","select","forEach","localPath","src","console","log","disabled","undefined","type","Button","FileSelector","ref","component","accept","contextTypes","PropTypes","oneOfType","string","number","InputGroup","className","InputGroupAddon","addonType","fixedWidth","model","defaultValue","placeholder","debounce","fontFamily","InputGroupText","includes","autoScale","upHandler","downHandler","Swatch","clickHandler","backgroundColor","border","colors","grays","value","onChange","iconWeight","iconFallbackWeight","useState","dropdownOpen","setDropdownOpen","hiddenColor","manualColor","choose","close","ButtonDropdown","isOpen","toggle","minWidth","visibility","tabIndex","caret","weight","fallbackWeight","right","tag","height","map","c","key","width","focus","click","Line","fontSize","paddingTop","paddingBottom","AoiOptions","Input","ImageOptions","changeHandler","tab","padding","files","size","fontStyle","fontWeight","alignment","textAlign","originX","icons","Toggle","Object","keys","Options","props","TextOptions","inNavbar","StrokeWidthDropdown","controlProps","ColorDropdown","gridSize","offsetX","offsetY","window","devicePixelRatio","backgroundTile","fabric","StaticCanvas","setDimensions","Array","fill","_","i","x","y","Math","floor","add","Rect","left","defaults","angle","stroke","isPlaceholder","o","unprocessedOptions","filePlaceholderRegex","toCanvas","object","componentId","store","ignore","output","transform","result","v","k","s","fallback","Number","toNumber","lockMovementX","lockMovementY","lockScalingX","lockScalingY","lockRotation","radius","rx","ry","x1","x2","y1","y2","scaleX","naturalWidth","scaleY","naturalHeight","filePlaceholderMatch","match","imagePath","file","getLocalFile","resolveImage","fromCanvas","oldObject","pickBy","startsWith","toObject","renderFill","Image","prototype","propertiesToInclude","this","getOriginalSize","apply","_src","_renderFill","ctx","_pattern","save","beginPath","w","h","fillStyle","fillRect","restore","fromObject","_object","callback","util","clone","loadImage","img","error","image","crossOrigin","Aoi","createClass","label","initialize","options","callSuper","forceAsync","_fromObject","disableStyleCopyPaste","FabricCanvas","Component","constructor","args","super","state","objects","activeObject","updateActive","bind","canvasRef","componentDidMount","viewPort","el","parentElement","clientWidth","max","ceil","parseInt","canvas","Canvas","preserveObjectStacking","enableRetinaScaling","viewportTransform","set","cornerSize","cornerStyle","lockSkewingX","lockSkewingY","rotatingPointOffset","strokeLineJoin","transparentCorners","Circle","hasRotatingPoint","lockUniScaling","setControlsVisibility","ml","mr","mt","mb","bl","br","tl","tr","IText","hasControls","data","loadFromJSON","setupSnapping","setupHandlers","setupGrid","setupOverlay","requestRenderAll","addEventListener","componentWillUnmount","removeEventListener","threshold","nearestGrid","stepSize","round","snap","abs","snappedCoord","on","target","e","shiftKey","setCoords","deleteHandler","updateHandler","updateSelectionHandler","clearSelectionHandler","setBackgroundColor","Pattern","source","makeBackground","getElement","setOverlayImage","overlay","setViewportTransform","vp","Path","setOptions","makeOverlay","toDataURL","originY","idSource","setControlVisible","Ellipse","Triangle","sqrt","placeholderMatch","context","Promise","resolve","reject","newObject","setActiveObject","getActiveObjects","modifyActive","method","discardActiveObject","remove","setSrc","call","cloneActive","render","contextType","ReactReduxContext","trulyUniqueId","existingIds","candidate","uniqueId","emptyFormData","CanvasEditor","_isMounted","filter","isObject","newId","push","fromPairs","prepareData","order","updateState","setState","updateForm","mode","_objects","formDispatch","actions","change","addContent","updateContent","updateOrder","deleteContent","omit","updateCanvas","updateFromForm","formData","newData","load","initialState","getDispatch","dispatch","FormGroup","Layers","Style","attr","merge"],"mappings":"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","file":"static/js/5.36a4590e.chunk.js","sourcesContent":["\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { UncontrolledButtonDropdown,\n  DropdownToggle, DropdownMenu, DropdownItem,\n  Button, ButtonGroup } from 'reactstrap'\n\nimport Icon from '../../../../../../Icon'\nimport FileSelector from '../../../../../../FileSelector'\n\nconst AddDropDown = (\n  { addHandler, cloneHandler, removeHandler, selection },\n  { id }\n) => {\n  let fileSelector = React.createRef()\n\n  return <>\n    <ButtonGroup>\n      <UncontrolledButtonDropdown direction=\"up\">\n        <DropdownToggle outline color=\"secondary\">\n          <Icon\n            icon=\"plus\"\n            style={{\n              position: 'relative',\n              top: '0.5px'\n            }}\n          />\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem header>Shapes</DropdownItem>\n          <DropdownItem\n            onClick={ () => addHandler('line') }\n          >\n            Line\n          </DropdownItem>\n          <DropdownItem\n            onClick={ () => addHandler('circle') }\n          >\n            Circle\n          </DropdownItem>\n          <DropdownItem\n            onClick={ () => addHandler('ellipse') }\n          >\n            Ellipse\n          </DropdownItem>\n          <DropdownItem\n            onClick={ () => addHandler('triangle') }\n          >\n            Triangle\n          </DropdownItem>\n          <DropdownItem\n            onClick={ () => addHandler('rect') }\n          >\n            Rectangle\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem header>Text</DropdownItem>\n          <DropdownItem\n            onClick={ () => addHandler('text', { content: 'text' }) }\n          >\n            Text\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem header>Media</DropdownItem>\n          <DropdownItem\n            onClick={ async () => {\n              try {\n                const files = await fileSelector.current.select()\n                files.forEach(({ localPath }) => {\n                  addHandler('image', {\n                    src: `\\${ this.files[\"${ localPath }\"] }`\n                  })\n                })\n              } catch (error) {\n                console.log('Error while inserting images', error)\n              }\n            } }\n          >\n            Image\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem header>Interaction</DropdownItem>\n          <DropdownItem\n            onClick={ () => addHandler('aoi') }\n          >\n            AOI\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem header>From selected</DropdownItem>\n          <DropdownItem\n            onClick={ cloneHandler }\n            disabled={ !selection || selection.type === undefined }\n          >\n            Duplicate\n          </DropdownItem>\n        </DropdownMenu>\n      </UncontrolledButtonDropdown>\n      <Button\n        outline color=\"secondary\"\n        onClick={ removeHandler }\n        disabled={ !selection || selection.type === undefined }\n      >\n        <Icon icon=\"trash\" />\n      </Button>\n    </ButtonGroup>\n    <FileSelector\n      ref={ fileSelector }\n      component={ id }\n      accept=\"image/*\"\n    />\n  </>\n}\n\nAddDropDown.contextTypes = {\n  id: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n}\n\nexport default AddDropDown\n","import React from 'react'\n\nimport { InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap'\nimport { Control } from 'react-redux-form'\n\nimport Icon from '../../../../../../../Icon'\n\nimport './index.css'\n\nexport default ({ selection, type }) =>\n  <InputGroup className=\"dimension-toolbar minimal-width-addons ml-2\">\n    <InputGroupAddon addonType=\"prepend\">\n      <span className=\"input-group-text\">\n        <Icon icon=\"long-arrow-right\" fixedWidth />\n      </span>\n    </InputGroupAddon>\n    <Control\n      model=\".left\"\n      defaultValue=\"\"\n      placeholder=\"x\"\n      disabled={ type === undefined }\n      debounce={ 200 }\n      className=\"form-control\"\n      style={{ fontFamily: 'Fira Mono' }}\n    />\n    <InputGroupAddon addonType=\"prepend\">\n      <InputGroupText>\n        <Icon icon=\"long-arrow-down\" fixedWidth />\n      </InputGroupText>\n    </InputGroupAddon>\n    <Control\n      model=\".top\"\n      defaultValue=\"\"\n      placeholder=\"y\"\n      disabled={ type === undefined }\n      debounce={ 200 }\n      className=\"form-control\"\n      style={{ fontFamily: 'Fira Mono' }}\n    />\n    <InputGroupAddon addonType=\"prepend\">\n      <InputGroupText>\n        <Icon icon=\"redo\" fixedWidth />\n      </InputGroupText>\n    </InputGroupAddon>\n    <Control\n      model=\".angle\"\n      defaultValue=\"\"\n      placeholder=\"angle\"\n      disabled={ ['circle', 'i-text', undefined].includes(type) }\n      debounce={ 200 }\n      className=\"form-control\"\n      style={{ fontFamily: 'Fira Mono' }}\n    />\n    <InputGroupAddon addonType=\"prepend\">\n      <InputGroupText>\n        <Icon icon=\"arrows-h\" fixedWidth />\n      </InputGroupText>\n    </InputGroupAddon>\n    <Control\n      model=\".width\"\n      defaultValue=\"\"\n      placeholder=\"width\"\n      disabled={\n        ['i-text', undefined].includes(type)\n        || (type === 'image' && selection.autoScale === 'width')\n      }\n      debounce={ 200 }\n      className=\"form-control\"\n      style={{ fontFamily: 'Fira Mono' }}\n    />\n    <InputGroupAddon addonType=\"prepend\">\n      <InputGroupText>\n        <Icon icon=\"arrows-v\" fixedWidth />\n      </InputGroupText>\n    </InputGroupAddon>\n    <Control\n      model=\".height\"\n      defaultValue=\"\"\n      placeholder=\"height\"\n      disabled={\n        ['line', 'circle', 'i-text', undefined].includes(type)\n        || (type === 'image' && selection.autoScale === 'height')\n      }\n      debounce={ 200 }\n      className=\"form-control\"\n      style={{ fontFamily: 'Fira Mono' }}\n    />\n  </InputGroup>\n","import React from 'react'\n\nimport { Button, ButtonGroup } from 'reactstrap'\n\nimport Icon from '../../../../../../Icon'\n\nexport default ({ upHandler, downHandler }) =>\n  <ButtonGroup\n    className=\"ml-2\"\n  >\n    <Button outline color=\"secondary\" onClick={ upHandler }>\n      <Icon icon=\"arrow-up\" />\n    </Button>\n    <Button outline color=\"secondary\" onClick={ downHandler }>\n      <Icon icon=\"arrow-down\" />\n    </Button>\n  </ButtonGroup>\n","import React, { useState } from 'react'\n\nimport { ButtonDropdown, DropdownToggle,\n  DropdownMenu, DropdownItem } from 'reactstrap'\n\nimport Icon from '../../../../../../../Icon'\n\nimport './index.css'\n\nconst Swatch = ({ color, clickHandler }) => {\n  return <div\n    className=\"color-swatch\"\n    onClick={ () => clickHandler(color) }\n    style={{\n      backgroundColor: color,\n      border: `1px solid ${ color === '#ffffff' ? '#ccc' : color }`,\n    }}\n  />\n}\n\nconst colors = [\n  '#0d3b83', '#0070d9', // blues\n  '#12864e', '#a8ca09', // greens\n  '#d6341a', '#fcbb0a', // red / yellow\n]\n\nconst grays = [\n  '#ffffff', '#dddddd',\n  '#aaaaaa', '#000000',\n]\n\nexport default ({ value, onChange, disabled,\n  icon, iconWeight, iconFallbackWeight }) => {\n\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n  let hiddenColor = React.createRef();\n  let manualColor = React.createRef();\n\n  const choose = (color, close=true) => {\n    onChange(color)\n    if (close)\n      setDropdownOpen(false)\n  }\n\n  return (\n    <ButtonDropdown\n      direction=\"up\"\n      isOpen={ dropdownOpen }\n      toggle={ () => setDropdownOpen(!dropdownOpen) }\n      style={{\n        minWidth: '3.5rem',\n      }}\n    >\n      {/* Hidden color input used to capture freely chosen colors */}\n      <input type=\"color\"\n        /* For some weird reason, display: none won't work here */\n        style={{ visibility: 'hidden', position: 'absolute' }}\n        tabIndex={ -1 }\n        ref={ hiddenColor }\n        value={ value || '' }\n        onChange={ () => choose(hiddenColor.current.value, false) }\n      />\n      {/* Remainder of the Dropdown */}\n      <DropdownToggle\n        caret outline color=\"secondary\"\n        className=\"border-left-0\"\n        disabled={ disabled }\n      >\n        <Icon\n          icon={ icon }\n          weight={ iconWeight }\n          fallbackWeight={ iconFallbackWeight }\n          style={{ position: 'relative', top: '1px' }}\n        />\n      </DropdownToggle>\n      <DropdownMenu right className=\"color-dropdown\">\n        {/* Predefined colors */}\n        <DropdownItem tag=\"div\" style={{ height: '136px' }} toggle={ false }>\n          {\n            colors.map(c =>\n              <Swatch\n                key={ c } color={ c }\n                clickHandler={ c => choose(c) }\n              />\n            )\n          }\n        </DropdownItem>\n        <DropdownItem divider />\n        {/* Grey values */}\n        <DropdownItem tag=\"div\" style={{ height: '90px' }} toggle={ false }>\n          {\n            grays.map(c =>\n              <Swatch\n                key={ c } color={ c }\n                clickHandler={ c => choose(c) }\n              />\n            )\n          }\n        </DropdownItem>\n        <DropdownItem divider />\n        {/* Custom color selector */}\n        <DropdownItem tag=\"div\" toggle={ false }>\n          <div\n            className=\"btn btn-outline-secondary\"\n            style={{ width: '126px' }}\n            onClick={ () => {\n              hiddenColor.current.focus()\n              hiddenColor.current.select()\n              hiddenColor.current.click()\n              setDropdownOpen(!dropdownOpen)\n            } }\n          >\n            <Icon icon=\"eye-dropper\" />\n          </div>\n        </DropdownItem>\n        <DropdownItem divider />\n        {/* Manual (text-based) color input */}\n        <DropdownItem tag=\"div\" toggle={ false }>\n          <input\n            className=\"form-control w-100\"\n            style={{ fontFamily: 'Fira Mono' }}\n            placeholder=\"CSS color\"\n            ref={ manualColor }\n            value={ value || '' }\n            onChange={ () => choose(manualColor.current.value, false) }\n          />\n        </DropdownItem>\n      </DropdownMenu>\n    </ButtonDropdown>\n  )\n}\n","import React from 'react'\n\nimport { UncontrolledButtonDropdown,\n  DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\n\nimport Icon from '../../../../../../Icon'\n\nconst Line = ({ height }) =>\n  <div\n    className=\"w-100\"\n    style={{\n      backgroundColor: 'black',\n      height: height\n    }}\n  />\n\nexport default ({ onChange, disabled }) =>\n  <UncontrolledButtonDropdown\n    direction=\"up\"\n    style={{\n      minWidth: '3.5rem',\n    }}\n  >\n    <DropdownToggle caret outline color=\"secondary\" disabled={ disabled }>\n      <Icon\n        icon=\"paint-brush\"\n        style={{\n          fontSize: '0.9em',\n        }}\n      />\n    </DropdownToggle>\n    <DropdownMenu>\n      <DropdownItem\n        onClick={ () => onChange(0) }\n      >\n        No line\n      </DropdownItem>\n      <DropdownItem divider />\n      {\n        [2, 5, 10].map(width =>\n          <DropdownItem\n            key={ `strokeWidthDropDown-${ width }` }\n            style={{ paddingTop: '10px', paddingBottom: '10px' }}\n            onClick={ () => onChange(width) }\n          >\n            <Line height={ `${ width }px` } />\n          </DropdownItem>\n        )\n      }\n    </DropdownMenu>\n  </UncontrolledButtonDropdown>\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { DropdownMenu, DropdownItem, Input,\n  InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap'\nimport { Control } from 'react-redux-form'\n\nimport Icon from '../../../../../../../Icon'\n\nconst AoiOptions = () =>\n  <DropdownMenu right\n    style={{\n      width: '300px',\n    }}\n  >\n    <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>\n            <Icon fixedWidth icon=\"tag\" />\n          </InputGroupText>\n        </InputGroupAddon>\n        <Control\n          model=\".label\"\n          component={ Input }\n          placeholder=\"Label\"\n          debounce={ 200 }\n          className=\"form-control\"\n          style={{ fontFamily: 'Fira Mono' }}\n        />\n      </InputGroup>\n    </DropdownItem>\n  </DropdownMenu>\n\nAoiOptions.contextTypes = {\n  id: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n}\n\nexport default AoiOptions\n","import React, { createRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { DropdownMenu, DropdownItem,\n  InputGroup, InputGroupAddon, InputGroupText,\n  Input, Button } from 'reactstrap'\nimport { Control } from 'react-redux-form'\n\nimport FileSelector from '../../../../../../../FileSelector'\nimport Icon from '../../../../../../../Icon'\n\nconst ImageOptions = ({ selection, changeHandler }, { id }) => {\n  const fileSelector = createRef()\n\n  return (\n    <DropdownMenu right\n      style={{\n        width: '500px',\n      }}\n    >\n      <FileSelector\n        tab=\"pool\"\n        accept=\"image/*\"\n        component={ id }\n        ref={ fileSelector }\n      />\n      <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\n        <InputGroup>\n          <Control\n            model=\".src\"\n            component={ Input }\n            placeholder=\"Source\"\n            debounce={ 200 }\n            className=\"form-control\"\n            style={{ fontFamily: 'Fira Mono' }}\n          />\n          <InputGroupAddon addonType=\"append\">\n            <Button\n              outline color=\"secondary\"\n              style={{ padding: '0 1rem' }}\n              onClick={ async () => {\n                try {\n                  const files = await fileSelector.current.select()\n                  changeHandler(\n                    'src', `\\${ this.files[\"${ files[0].localPath }\"] }`\n                  )\n                } catch (error) {\n                  console.log('Error while inserting image', error)\n                }\n              } }\n            >\n              <Icon icon=\"folder\" />\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n      </DropdownItem>\n      <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\n        <InputGroup className=\"d-flex flex-row image-autoscale\" size=\"sm\">\n          <InputGroupAddon addonType=\"prepend\" style={{ width: '25%' }}>\n            <InputGroupText className=\"w-100 text-center\">\n              Auto resize\n            </InputGroupText>\n          </InputGroupAddon>\n          <InputGroupAddon\n            className=\"flex-fill\"\n            addonType=\"append\"\n          >\n            <Button outline\n              color={\n                !['width', 'height'].includes(selection.autoScale)\n                  ? 'primary'\n                  : 'secondary'\n              }\n              style={{ width: '35%' }}\n              onClick={ () => changeHandler('autoScale', false) }\n            >\n              <Icon icon=\"power-off\" />\n            </Button>\n            <Button outline\n              color={ selection.autoScale === 'width'\n                ? 'primary' : 'secondary' }\n              style={{ width: '32.5%' }}\n              onClick={ () => changeHandler('autoScale', 'width') }\n            >\n              <Icon icon=\"arrows-alt-h\" />\n            </Button>\n            <Button outline\n              color={ selection.autoScale === 'height'\n                ? 'primary' : 'secondary' }\n              style={{ width: '32.5%' }}\n              onClick={ () => changeHandler('autoScale', 'height') }\n            >\n              <Icon icon=\"arrows-alt-v\" />\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n      </DropdownItem>\n    </DropdownMenu>\n  )\n}\n\nImageOptions.contextTypes = {\n  id: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n}\n\nexport default ImageOptions\n","import React from 'react'\nimport { DropdownMenu, DropdownItem,\n  Button, ButtonGroup,\n  Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap'\nimport { Control } from 'react-redux-form'\n\nimport Icon from '../../../../../../../Icon'\n\nexport default ({ selection, changeHandler }) =>\n  <DropdownMenu\n    style={{\n      width: '200px',\n    }}\n  >\n    {/* <divs> are needed here because DropdownItems are buttons,\n        and the buttons here can't be nested within. */}\n    <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\n      <Control.select\n        model=\".fontFamily\"\n        className=\"form-control custom-select\"\n      >\n        <option value=\"serif\">Serif</option>\n        <option value=\"sans-serif\">Sans-serif</option>\n        <option value=\"monospace\">Monospace</option>\n      </Control.select>\n    </DropdownItem>\n    <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\n      <ButtonGroup className=\"w-100 typography-font-style\">\n        <Button\n          outline color={\n            selection.fontStyle === 'italic'\n              ? 'primary'\n              : 'secondary'\n          }\n          className=\"w-50\"\n          onClick={ () => {\n            if (selection.fontStyle === 'italic') {\n              changeHandler('fontStyle', 'normal')\n            } else {\n              changeHandler('fontStyle', 'italic')\n            }\n          } }\n        >\n          <Icon icon=\"italic\" />\n        </Button>\n        <Button\n          outline color={\n            selection.fontWeight === 'bold'\n              ? 'primary'\n              : 'secondary'\n          }\n          className=\"w-50\"\n          onClick={ () => {\n            if (selection.fontWeight === 'bold') {\n              changeHandler('fontWeight', 'normal')\n            } else {\n              changeHandler('fontWeight', 'bold')\n            }\n          } }\n        >\n          <Icon icon=\"bold\" />\n        </Button>\n      </ButtonGroup>\n    </DropdownItem>\n    <DropdownItem divider />\n    <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>\n            <Icon icon=\"text-height\" />\n          </InputGroupText>\n        </InputGroupAddon>\n        <Control\n          model=\".fontSize\"\n          component={ Input }\n          placeholder=\"Size\"\n          debounce={ 200 }\n          className=\"form-control\"\n          style={{ fontFamily: 'Fira Mono' }}\n        />\n      </InputGroup>\n    </DropdownItem>\n    <DropdownItem divider />\n    <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\n      <ButtonGroup className=\"typography-alignment\">\n      {\n        /* Ideally, highlighting of the selected option\n            would be covered by the active property, but\n            the default style doesn't look good */\n        ['left', 'center', 'right'].map(alignment =>\n          <Button\n            key={ `text-align-${ alignment }` }\n            outline color={ selection.textAlign === alignment\n              ? 'primary'\n              : 'secondary'\n            }\n            onClick={ () => changeHandler({\n              textAlign: alignment,\n              originX: alignment,\n            }) }\n          >\n            <Icon icon={ `align-${ alignment }` } />\n          </Button>\n        )\n      }\n      </ButtonGroup>\n    </DropdownItem>\n  </DropdownMenu>\n","import React, { useState } from 'react'\n\nimport { ButtonDropdown, DropdownToggle } from 'reactstrap'\n\nimport Icon from '../../../../../../../Icon'\n\nimport AoiOptions from './AoiOptions'\nimport ImageOptions from './ImageOptions'\nimport TextOptions from './TextOptions'\n\nimport './index.css'\n\nconst icons = {\n  'aoi': 'bullseye-pointer',\n  'i-text': 'font',\n  'image': 'image',\n}\n\nconst Toggle = ({ type }) =>\n  <DropdownToggle\n    caret outline color=\"secondary\"\n    disabled={ !Object.keys(icons).includes(type) }\n    style={{\n      minWidth: '3.5rem',\n    }}\n  >\n    <Icon icon={ icons[type] || 'cog' } />\n  </DropdownToggle>\n\nconst Options = (props) => {\n  switch(props.selection.type) {\n    case 'aoi':\n      return <AoiOptions { ...props } />\n    case 'i-text':\n      return <TextOptions { ...props } />\n    case 'image':\n      return <ImageOptions { ...props } />\n    default:\n      return null\n  }\n}\n\nexport default ({ selection, changeHandler }) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n\n  return (\n    <ButtonDropdown\n      direction=\"up\"\n      isOpen={ dropdownOpen }\n      toggle={ () => setDropdownOpen(!dropdownOpen) }\n      // Don't close the dropdown menu on any click\n      // (otherwise, clicking inside the modal triggers\n      // the toggle. Note that this is a hack, because\n      // this property happens to do what we want,\n      // but that is not guaranteed)\n      inNavbar={ true }\n    >\n      <Toggle\n        type={ selection.type }\n      />\n      <Options\n        selection={ selection }\n        changeHandler={ changeHandler }\n        toggle={ () => setDropdownOpen(false) }\n      />\n    </ButtonDropdown>\n  )\n}\n","import React from 'react'\n\nimport { Control } from 'react-redux-form'\nimport { ButtonGroup } from 'reactstrap'\n\nimport ColorDropdown from './ColorDropDown'\nimport StrokeWidthDropdown from './StrokeWidthDropDown'\nimport Details from './Details'\n\nexport default ({ selection, changeHandler }) =>\n  <ButtonGroup className=\"ml-2\">\n    <Details\n      selection={ selection }\n      changeHandler={ changeHandler }\n    />\n    <Control\n      model=\".strokeWidth\"\n      component={ StrokeWidthDropdown }\n      controlProps={{\n        disabled: ['image', 'aoi', undefined].includes(selection.type),\n      }}\n    />\n    <Control\n      model=\".stroke\"\n      component={ ColorDropdown }\n      controlProps={{\n        icon: 'circle',\n        iconFallbackWeight: 'r',\n        disabled: ['image', 'aoi', undefined].includes(selection.type),\n      }}\n    />\n    <Control\n      model=\".fill\"\n      component={ ColorDropdown }\n      controlProps={{\n        icon: 'circle',\n        iconWeight: 's',\n        disabled: ['line', 'image', 'aoi', undefined].includes(selection.type),\n      }}\n    />\n  </ButtonGroup>\n","import { fabric } from 'fabric'\n\nexport default (gridSize, offsetX, offsetY) => {\n  // Correct for high-DPI devices\n  const size = gridSize / window.devicePixelRatio\n  // FIXME: Non-integer values break things\n\n  // Create a single tile\n  const backgroundTile = new fabric.StaticCanvas()\n  backgroundTile.setDimensions({\n    width: size, height: size,\n  })\n\n  // The grid needs to be filled in all four corners,\n  // for one pixel each\n  Array(4).fill().forEach((_, i) => {\n    const [x, y] = [i % 2 * size, Math.floor(i / 2) * size]\n    backgroundTile.add(new fabric.Rect({\n      width: 1, height: 1,\n      // FIXME: This is a hack, and it breaks down\n      // when adding window scaling\n      left: x - 1 + (offsetX / window.devicePixelRatio),\n      top: y - 1 + (offsetY / window.devicePixelRatio),\n      fill: 'rgba(0, 0, 0, 0.125)',\n    }))\n  })\n\n  return backgroundTile\n}\n","import { transform, pickBy } from 'lodash'\nimport { getLocalFile } from '../../../../../logic/util/files'\n\nconst defaults = {\n  left: 0, top: 0,\n  width: 50, height: 50,\n  angle: 0,\n  stroke: null, fill: 'black'\n}\n\n// TODO: Add proper validation mechanism\n// and alert user to nonsensical values\nconst toNumber = (s, fallback=0) => {\n  if (['', '+', '-'].includes(s)) {\n    return 0\n  } else {\n    return Number(s) || fallback\n  }\n}\n\nconst isPlaceholder = o =>\n  typeof o === 'string' && o.includes('$')\n\nconst unprocessedOptions = ['text', 'src']\n\n// TODO: This is a mess :-/\nexport const filePlaceholderRegex =\n  /^\\s*\\${\\s*this\\.files\\[['\"]([^'\"]+)['\"]\\]\\s*}\\s*$/\n\nexport const resolveImage = (src, store, id) => {\n  // Look up and insert image data\n  const filePlaceholderMatch = src?.match(filePlaceholderRegex)\n  if (filePlaceholderMatch) {\n    const imagePath = filePlaceholderMatch[1]\n\n    // Check if the requested file exists\n    const file = getLocalFile(store, id, imagePath)\n    return file?.file.content\n  } else if (isPlaceholder(src)) {\n    return undefined\n  } else {\n    return src\n  }\n}\n\nexport const toCanvas = (object, componentId, store, ignore=[]) => {\n  if (!object) {\n    return object\n  } else {\n    const output = {\n      ...object,\n      // Substitute defaults where placeholders are used\n      // (except for text content which is passed through,\n      // and image srcs, which are handled below)\n      ...transform(object, (result, v, k) => {\n        if (isPlaceholder(v) && !unprocessedOptions.includes(k)) {\n          result[k] = defaults[k]\n        } else if (['left', 'top', 'angle', 'width', 'height'].includes(k)) {\n          result[k] = toNumber(\n            object[k], defaults[k], // fallback values\n          )\n        }\n      }),\n      // Lock manipulations where placeholders are present\n      lockMovementX: isPlaceholder(object.left),\n      lockMovementY: isPlaceholder(object.top),\n      lockScalingX: isPlaceholder(object.width),\n      lockScalingY: isPlaceholder(object.height) || object.type === 'line',\n      lockRotation: isPlaceholder(object.angle),\n    }\n\n    if (object.type === 'circle') {\n      output.radius = output.width / 2\n    } else if (output.type === 'ellipse') {\n      output.rx = output.width / 2\n      output.ry = output.height / 2\n    } else if (output.type === 'line') {\n      output.x1 = output.left - output.width / 2\n      output.x2 = output.left + output.width / 2\n      output.y1 = output.top\n      output.y2 = output.top\n    } else if (output.type === 'image') {\n      output.scaleX = output.width / output.naturalWidth\n      output.scaleY = output.height / output.naturalHeight\n      output.width = output.naturalWidth\n      output.height = output.naturalHeight\n\n      output.src = resolveImage(object.src, store, componentId)\n    }\n\n    // Ignore specified keys (notably, text during updates from the form)\n    ignore.forEach(k => delete output[k])\n\n    return output\n  }\n}\n\nexport const fromCanvas = (object, oldObject) => {\n  if (!object || !oldObject) {\n    return object\n  }\n\n  const output = {\n    // Filter manipulation locks\n    ...pickBy(object, (v, k) => !k.startsWith('lock')),\n    // Placeholders can't be overridden\n    ...transform(object, (result, v, k) => {\n      if (isPlaceholder(oldObject[k]) && k !== 'text') {\n        result[k] = oldObject[k]\n      }\n    }),\n  }\n\n  if (object.type === 'image') {\n    output.width = isPlaceholder(oldObject['width'])\n      ? oldObject.width\n      : output.scaleX * output.naturalWidth\n    output.height = isPlaceholder(oldObject['height'])\n      ? oldObject.height\n      : output.scaleY * output.naturalHeight\n    output.autoScale = oldObject.autoScale\n  }\n\n  return output\n}\n","import React, { Component, createRef } from 'react'\nimport { ReactReduxContext } from 'react-redux'\n\nimport { fabric } from 'fabric'\n\nimport makeBackground from './background'\nimport makeOverlay from './overlay'\n\nimport { filePlaceholderRegex } from '../../logic'\nimport { getLocalFile } from '../../../../../../../logic/util/files'\n\n// Customize image behavior ----------------------------------------------------\n\nfabric.Image.prototype.toObject = (function(toObject) {\n  return function(propertiesToInclude) {\n    const { width, height } = this.getOriginalSize()\n    return {\n      ...toObject.apply(this, [propertiesToInclude]),\n      // Save the image's original resolution,\n      // but fall back onto raw width and height\n      // if these are not available.\n      // (i.e. if the image couldn't be loaded)\n      naturalWidth: width || this.width,\n      naturalHeight: height || this.height,\n      // Restore original (placeholder-based) path\n      // for export (this is useful mostly when new\n      // images are added, after that, updates to\n      // placeholder-based attributes are blocked by\n      // editor logic)\n      src: this._src ? this._src : this.src,\n    }\n  }\n})(fabric.Image.prototype.toObject)\n\nfabric.Image.prototype._renderFill = (function(renderFill) {\n  return function(ctx) {\n    if (!this.src && !this._pattern) {\n      ctx.save()\n      ctx.beginPath()\n      const w = this.width || 50\n      const h = this.height || 50\n      ctx.fillStyle = 'rgba(50, 50, 50, 0.25)'\n      ctx.fillRect(\n        -w / 2, -h / 2,\n        w, h,\n      )\n      ctx.restore()\n    } else {\n      // Use standard rendering path\n      renderFill.apply(this, [ctx])\n    }\n  }\n})(fabric.Image.prototype._renderFill)\n\nfabric.Image.fromObject = function(_object, callback) {\n  var object = fabric.util.object.clone(_object)\n  fabric.util.loadImage(object.src, function(img, error) {\n    // Substitute empty image in case of error\n    const image = new fabric.Image(\n      error ? new Image() : img,\n      object\n    )\n    image.crossOrigin = \"anonymous\"\n\n    // Pretend that we were successful in any case\n    callback(image)\n  })\n}\n\n// Add AOI object type ---------------------------------------------------------\n\n// (apparently fabric requires camelcased constructors)\nfabric.Aoi = fabric.util.createClass(fabric.Rect, {\n  type: 'aoi',\n  label: '',\n  initialize: function(options={}) {\n    options.fill = 'rgba(0, 0, 0, 0.2)'\n    this.callSuper('initialize', options)\n  },\n})\n\nfabric.Aoi.fromObject = function(object, callback, forceAsync) {\n  return fabric.Object._fromObject('Aoi', object, callback, forceAsync);\n}\n\n// Customize text behavior -----------------------------------------------------\n// Always paste and apply style\nfabric.disableStyleCopyPaste = true\n\n// Canvas component ------------------------------------------------------------\n\nconst handlePadding = 6\n\nexport default class FabricCanvas extends Component {\n  static contextType = ReactReduxContext\n\n  constructor(...args) {\n    super(...args)\n    this.state = {\n      objects: {},\n      activeObject: null,\n    }\n\n    this.updateActive = this.updateActive.bind(this)\n    this.canvasRef = createRef()\n  }\n\n  componentDidMount() {\n    // Options\n    const gridSize = 25\n    const snapThreshold = 10\n    const viewPort = [800, 600]\n\n    // Initialize canvas element\n    const el = this.canvasRef.current.parentElement\n\n    this.width = el.clientWidth - 15\n    this.height = Math.max(\n      Math.ceil(el.clientWidth * 9/16),\n      viewPort[1] + 2 * gridSize,\n    )\n\n    // Calculate offsets so that the grid runs\n    // through the center of the canvas\n    this.offsetX = parseInt((this.width / 2) % gridSize, 10)\n    this.offsetY = parseInt((this.height / 2) % gridSize, 10)\n\n    // Initialize fabric canvas\n    this.canvas = new fabric.Canvas()\n    this.canvas.initialize(this.canvasRef.current, {\n      width: this.width,\n      height: this.height,\n      preserveObjectStacking: true,\n      enableRetinaScaling: true,\n      viewportTransform: [\n        1, 0,\n        0, 1,\n        this.width/2, this.height/2\n      ],\n      selection: false, // No multiple selection\n    })\n\n    // UI Customization --------------------------------------------------------\n    // Overall\n    fabric.Object.prototype.set({\n      cornerSize: 9,\n      cornerStyle: 'circle',\n      lockSkewingX: true,\n      lockSkewingY: true,\n      rotatingPointOffset: 30,\n      padding: handlePadding,\n      strokeLineJoin: 'round',\n      transparentCorners: false,\n    })\n\n    // Per-type\n    fabric.Circle.prototype.hasRotatingPoint = false\n    fabric.Circle.prototype.lockUniScaling = true\n    fabric.Image.prototype.lockUniScaling = true\n    fabric.Line.prototype.lockScalingY = true\n    fabric.Line.prototype.setControlsVisibility({\n      ml: true,\n      mr: true,\n      mt: false,\n      mb: false,\n      bl: false,\n      br: false,\n      tl: false,\n      tr: false,\n    })\n\n    fabric.IText.prototype.hasControls = false\n\n    // Load data from props, if provided ---------------------------------------\n\n    if (this.props.data) {\n      this.canvas.loadFromJSON(\n        { objects: this.props.data },\n        () => {\n          this.setupSnapping(gridSize, snapThreshold)\n          this.setupHandlers()\n          this.setupGrid(gridSize)\n          this.setupOverlay(viewPort)\n          this.canvas.requestRenderAll()\n        },\n      )\n    } else {\n      this.setupSnapping(gridSize, snapThreshold)\n      this.setupHandlers()\n      this.setupGrid(gridSize)\n      this.setupOverlay(viewPort)\n    }\n\n    // Listen for preload event\n    window.addEventListener('preview:preempt', this.updateActive)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('preview:preempt', this.updateActive)\n  }\n\n  setupSnapping(gridSize, threshold) {\n    const nearestGrid = (x, stepSize=gridSize) =>\n      Math.round(x / stepSize) * stepSize\n\n    const snap = (x) =>\n      Math.abs(x - nearestGrid(x)) < threshold\n\n    const snappedCoord = (x) =>\n      snap(x) ? nearestGrid(x) : x\n\n    // Snap origin on move\n    this.canvas.on('object:moving', ({ target, e: { shiftKey } }) => {\n      const { left, top } = target\n\n      // TODO: It would be nice to show the snapping point,\n      // as it depends on the origin coordinates\n\n      // TODO: Re-think snapping override key\n      // (should match common software, e.g. Inkscape,\n      // and be consistent with scaling, which depends\n      // on several modifier keys)\n      if (!shiftKey && (snap(left) || snap(top))) {\n        // Round position to closest grid point\n        target.set({\n          left: snappedCoord(left),\n          top:  snappedCoord(top),\n        }).setCoords()\n      }\n    })\n\n    // Rotation snapping\n    // (currently at 15deg increments)\n    this.canvas.on('object:rotating', ({ target, e: { shiftKey } }) => {\n      if (!shiftKey) {\n        target.set({\n          angle: nearestGrid(target.angle, 15)\n        })\n      }\n    })\n  }\n\n  setupHandlers() {\n    // Hand on any changes to appropriate handlers\n    this.canvas.on('object:added', this.props.addHandler)\n    this.canvas.on('object:removed', this.props.deleteHandler)\n    this.canvas.on('object:modified', ({ target }) => {\n      // Normalize scaling\n      target.set({\n        width: target.width && target.type !== 'image'\n          ? target.width * target.scaleX\n          : target.width,\n        height: target.height && target.type !== 'image'\n          ? target.height * target.scaleY\n          : target.height,\n        radius: target.radius ? target.radius * target.scaleX : target.radius,\n        rx: target.rx ? target.rx * target.scaleX : target.rx,\n        ry: target.ry ? target.ry * target.scaleY : target.ry,\n        scaleX: target.type === 'image'\n          ? target.scaleX\n          : 1,\n        scaleY: target.type === 'image'\n          ? target.scaleY\n          : 1,\n      })\n\n      // Hand changes on\n      this.props.updateHandler({ target })\n    })\n\n    // Pass on further useful events -------------------------------------------\n    this.canvas.on('selection:created', this.props.updateSelectionHandler)\n    this.canvas.on('selection:updated', this.props.updateSelectionHandler)\n    this.canvas.on('selection:cleared', this.props.clearSelectionHandler)\n  }\n\n  setupGrid(gridSize) {\n    this.canvas.setBackgroundColor(new fabric.Pattern({\n      source: makeBackground(gridSize, this.offsetX, this.offsetY).getElement(),\n    }))\n  }\n\n  setupOverlay(viewPort) {\n    this.canvas.setOverlayImage(\n      // There used to be the option\n      // { multiplier: 1 / window.devicePixelRatio }\n      // in the call to toDataURL, but the extra scaling\n      // doesn't seem to be necessary any more\n      makeOverlay(this.width, this.height, viewPort).toDataURL(),\n      () => this.canvas.requestRenderAll(),\n      // This is somewhat weird -- the transformation\n      // should really also apply to the overlay,\n      { originX: 'center', originY: 'center', _pattern: true }\n    )\n  }\n\n  // TODO: External change handlers\n  // need to call change handler directly\n  async add(type, options={}) {\n    // This construction is dubious\n    const newObject = await (async () => {\n      const defaults = {\n        originX: 'center',\n        originY: 'center',\n        left: 0,\n        top: 0,\n        fill: 'black',\n        id: this.props.idSource(),\n      }\n\n      switch(type) {\n        case 'line':\n          return new fabric.Line([-50, 0, 50, 0], {\n            stroke: 'black',\n            id: defaults.id, // Re-use id generated above\n            originX: 'center',\n            originY: 'center',\n          })\n        case 'circle':\n          return new fabric.Circle({\n            radius: 27.5,\n            ...defaults,\n            ...options,\n          }).setControlVisible('mtr', false)\n        case 'ellipse':\n          return new fabric.Ellipse({\n            rx: 30,\n            ry: 25,\n            ...defaults,\n            ...options,\n          })\n        case 'triangle':\n          return new fabric.Triangle({\n            width: 2 * 50 * Math.sqrt(1/3),\n            height: 50,\n            ...defaults,\n            ...options,\n          })\n        case 'rect':\n          return new fabric.Rect({\n            width: 50, height: 50,\n            ...defaults,\n            ...options,\n          })\n        case 'text':\n          const content = options.content\n          delete options.content\n          return new fabric.IText(content, {\n            fontFamily: 'sans-serif',\n            fontSize: 32,\n            textAlign: 'center',\n            ...defaults,\n            ...options,\n          })\n        case 'image':\n          const placeholderMatch = options.src.match(filePlaceholderRegex)\n          if (placeholderMatch) {\n            // Save original placeholder-based path\n            options._src = options.src\n            options.src = getLocalFile(\n              this.context.store,\n              this.props.id,\n              placeholderMatch[1]\n            ).file.content\n          }\n          const img = await new Promise((resolve, reject) => {\n            const image = new Image()\n\n            image.addEventListener('load', () => resolve(image))\n            image.addEventListener('error', e => reject(e))\n\n            image.crossOrigin = \"anonymous\"\n            image.src = options.src\n          })\n\n          return new fabric.Image(img, {\n            ...defaults,\n            ...options,\n          })\n        case 'aoi':\n          return new fabric.Aoi({\n            width: 50, height: 50,\n            ...defaults,\n          })\n        default:\n          return undefined\n      }\n    })()\n\n    if (newObject) {\n      this.canvas.add(newObject)\n      this.canvas.setActiveObject(newObject)\n    }\n  }\n\n  updateActive() {\n    const selection = this.canvas.getActiveObjects()\n    selection.forEach((target) => {\n      if (target.type === 'i-text') {\n        this.props.updateHandler({ target })\n      }\n    })\n  }\n\n  modifyActive(method, ...args) {\n    // Find selected object or group thereof\n    // FIXME: In 2.0, this appears to covers groups, see\n    // https://github.com/kangax/fabric.js/blob/10545cec7773cd1c00312c1428f09ea43fd8ac52/test/unit/canvas.js#L1263\n    const selection = this.canvas.getActiveObjects()\n\n    // At present, multiple selection is deactivated, so that this loop\n    // will only ever run once (there were some issues with multiple\n    // selection / concurrent modification)\n    selection.forEach(o => {\n      switch(method) {\n        case 'remove':\n          this.canvas.discardActiveObject()\n          this.canvas.remove(o)\n          break\n        default:\n          // Update image src, if required (and then rerender)\n          if (o.type === 'image' &&\n            args[0] && args[0].src && // new options are provided ...\n            o.src !== args[0].src     // ... and the src changed\n          ) {\n            o.setSrc(args[0].src, () => this.canvas.requestRenderAll())\n          }\n\n          // Apply modifications\n          o[method].call(o, ...args)\n\n          // Update handle coordinates\n          o.setCoords()\n      }\n    })\n\n    // Re-render canvas\n    this.canvas.requestRenderAll()\n  }\n\n  cloneActive() {\n    this.canvas.getActiveObjects().map(\n      o => o.clone(\n        c => {\n          c.id = this.props.idSource()\n          this.canvas.add(c)\n          this.canvas.setActiveObject(c)\n        }\n      )\n    )\n  }\n\n  toObject() {\n    return this.canvas.toObject(['id'])\n  }\n\n  render () {\n    return <canvas ref={ this.canvasRef } />\n  }\n}\n","import { fabric } from 'fabric'\n\nexport default (width, height, viewPort) => {\n  const overlay = new fabric.StaticCanvas()\n  overlay.setDimensions({\n    width: width + 20, height: height + 20,\n  })\n\n  // Transform coordinate system\n  overlay.setViewportTransform([\n    1, 0, 0, 1,\n    width/2 + 10, height/2 + 10\n  ])\n\n  // Draw viewport margin ------------------------------------------------------\n  const vp = new fabric.Path(\n    `M ${ -width/2 - 10 } ${ -height/2 - 10 } ` +\n    `L ${ -width/2 - 10 } ${ +height/2 + 10 } ` +\n    `L ${ +width/2 + 10 } ${ +height/2 + 10 } ` +\n    `L ${ +width/2 + 10 } ${ -height/2 - 10 } ` +\n    `L ${ -width/2 - 10 } ${ -height/2 - 10 } z ` +\n    // Lines are offset here to make them sharp\n    `M ${ -viewPort[0]/2 - 0.5 } ${ -viewPort[1]/2 - 0.5 } ` +\n    `L ${ +viewPort[0]/2 - 0.5 } ${ -viewPort[1]/2 - 0.5 } ` +\n    `L ${ +viewPort[0]/2 - 0.5 } ${ +viewPort[1]/2 - 0.5 } ` +\n    `L ${ -viewPort[0]/2 - 0.5 } ${ +viewPort[1]/2 - 0.5 } ` +\n    `L ${ -viewPort[0]/2 - 0.5 } ${ -viewPort[1]/2 - 0.5 } z`\n  )\n\n  vp.setOptions({ fill: 'rgba(255, 255, 255, 0.6)' })\n  overlay.add(vp)\n\n  // Draw viewPort border ------------------------------------------------------\n  overlay.add(new fabric.Rect({\n    width: viewPort[0] + 1,\n    height: viewPort[1] + 1,\n    left: -viewPort[0]/2 - 1,\n    top: -viewPort[1]/2 - 1,\n    fill: 'transparent',\n    stroke: 'rgba(0, 0, 0, 0.125)',\n  }))\n\n  return overlay\n}\n","import React, { Component } from 'react'\nimport { ReactReduxContext } from 'react-redux'\n\nimport { LocalForm, actions } from 'react-redux-form'\nimport { FormGroup } from 'reactstrap'\nimport { fromPairs, isObject, omit, uniqueId } from 'lodash'\n\nimport AddDropDown from './components/form/AddDropDown'\nimport Dimensions from './components/form/Dimensions'\nimport Layers from './components/form/Layers'\nimport Style from './components/form/Style'\n\nimport FabricCanvas from './components/fabric'\nimport { fromCanvas, toCanvas } from './logic'\n\nconst trulyUniqueId = (existingIds=[]) => {\n  let candidate = uniqueId()\n\n  // Make sure no ids are used multiple times\n  while (existingIds.includes(candidate)) {\n    candidate = uniqueId()\n  }\n\n  return candidate\n}\n\nconst prepareData = data => {\n  const existingIds = data\n    .filter(c => isObject(c) && c.id !== undefined)\n    .map(c => c.id)\n\n  const output = data\n    .filter(c => isObject(c))\n    .map(c => {\n      // Add new id where not already present\n      if (c.id) {\n        return [c.id, c]\n      } else {\n        const newId = trulyUniqueId(existingIds)\n        existingIds.push(newId)\n        c.id = newId\n        return [c.id, c]\n      }\n    })\n\n  return [\n    fromPairs(output), // Object with id => data mapping\n    output.map(o => o[0]) // Array of ids in order\n  ]\n}\n\nconst emptyFormData = {\n  left: '', top: '', angle: '',\n  width: '', height: '',\n}\n\nexport default class CanvasEditor extends Component {\n  static contextType = ReactReduxContext\n  _isMounted = false\n\n  constructor(...args) {\n    super(...args)\n\n    const [data, order] = prepareData(this.props.data)\n    this.state = {\n      data, order,\n      selection: undefined,\n    }\n    this.updateState = this.updateState.bind(this)\n\n    this.canvas = React.createRef()\n  }\n\n  setState(data) {\n    if (this._isMounted) {\n      // Update component state, then store\n      super.setState(data, () => {\n        this.updateForm()\n        this.updateState()\n      })\n    } else {\n      // Flush canvas data directly to store\n      this.updateState('override')\n    }\n  }\n\n  updateState(mode='local') {\n    if (mode === 'override') {\n      // Update from raw canvas state\n      // TODO: Investigate implications of this, specifically\n      // avoid unnecessary invalidation/object mutations\n      this.props.onChange(\n        this.canvas.current.canvas._objects.map(o => fromCanvas(\n          o.toObject(['id', 'label']),\n          this.state.data[o.id],\n        ))\n      )\n    } else {\n      // Update from component state\n      this.props.onChange(\n        this.canvas.current.canvas._objects.map(o => this.state.data[o.id])\n      )\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n    this.canvas.current.updateActive()\n  }\n\n  // Selection -----------------------------------------------------------------\n\n  set selection(id) {\n    this.setState({ selection: id })\n    if (id === undefined) {\n      this.formDispatch(\n        actions.change('local', emptyFormData)\n      )\n    }\n  }\n\n  get selection() {\n    return this.state.data[this.state.selection] || { type: undefined }\n  }\n\n  // User action handlers ------------------------------------------------------\n\n  addContent(target) {\n    this.updateContent(target, false)\n    this.updateOrder()\n  }\n\n  deleteContent(target) {\n    this.setState({ data: omit(this.state.data, [target.id]) })\n    this.selection = undefined\n  }\n\n  updateContent(target, updateCanvas=true) {\n    // Save the updated object in editor state,\n    // after converting it into a raw object\n    if (target.id) {\n      this.setState({\n        data: {\n          ...this.state.data,\n          [target.id]: target\n        }\n      })\n\n      // Reflect modification on canvas\n      if (updateCanvas) {\n        this.canvas.current.modifyActive(\n          'set', toCanvas(target, this.props.id, this.context.store, ['text'])\n        )\n      }\n    }\n  }\n\n  updateOrder() {\n    this.setState({ order: this.canvas.current.canvas._objects.map(o => o.id) })\n  }\n\n  // Form data handling --------------------------------------------------------\n\n  // TODO: Think about merging this with the updateContent\n  updateFromForm(formData) {\n    const newData = { ...formData }\n\n    // Prevent updates if the data for the currently selected object\n    // is not yet available in the editor state. This catches a weird\n    // edge case during object cloning where an object is added and\n    // the selection changes, but the data is not yet available through\n    // the editor state, even though it catches up shortly after.\n    // This glitch likely reflects an issue in the underlying updating\n    // and syncronisation logic, and will require a more careful\n    // analysis in the mid-term\n    if (this.state.data[this.state.selection]) {\n      this.updateContent({\n        ...newData,\n        // Preserve type information\n        // (which is sometimes lost through the form)\n        type: this.state.selection\n          ? this.state.data[this.state.selection].type\n          : undefined,\n        id: this.state.selection,\n      }, true) // also update canvas\n    }\n  }\n\n  updateForm() {\n    if (this.formDispatch) {\n      this.formDispatch(\n        actions.load(\n          'local', this.selection\n        )\n      )\n    }\n  }\n\n  uniqueId() {\n    return trulyUniqueId(this.state.order)\n  }\n\n  render() {\n    const selection = this.selection\n\n    return <>\n      <FabricCanvas\n        id={ this.props.id }\n        data={ this.state.order.map(id => toCanvas(this.state.data[id], this.props.id, this.context.store)) }\n        ref={ this.canvas }\n        addHandler={\n          ({ target }) => this.addContent(target.toObject(['id', 'label']))\n        }\n        deleteHandler={ ({ target }) => this.deleteContent(target) }\n        updateHandler={ ({ target }) => {\n          this.updateContent(\n            fromCanvas(\n              target.toObject(['id', 'label']),\n              this.state.data[target.id],\n            ),\n            false,\n          )\n        } }\n        updateSelectionHandler={ ({ target }) => this.selection = target.id }\n        clearSelectionHandler={ () => this.selection = undefined }\n        idSource={ () => this.uniqueId() }\n      />\n      <hr />\n      <LocalForm\n        initialState={ selection }\n        onChange={ data => this.updateFromForm(data) }\n        getDispatch={ dispatch => this.formDispatch = dispatch }\n      >\n        <FormGroup className=\"toolbar d-flex\">\n          <AddDropDown\n            addHandler={ (...args) => this.canvas.current.add(...args) }\n            removeHandler={ () => this.canvas.current.modifyActive('remove') }\n            cloneHandler={ () => this.canvas.current.cloneActive() }\n            selection={ selection }\n          />\n          <Layers\n            type={ selection.type }\n            upHandler={ () => {\n              this.canvas.current.modifyActive('bringForward')\n              // The canvas does not signal this modification,\n              // so trigger update manually\n              this.updateOrder()\n            } }\n            downHandler={ () => {\n              this.canvas.current.modifyActive('sendBackwards')\n              this.updateOrder()\n            } }\n          />\n          <Dimensions\n            selection={ selection }\n            type={ selection.type }\n          />\n          <Style\n            type={ selection.type }\n            selection={ selection }\n            changeHandler={ (attr, value) => {\n              if (isObject(attr)) {\n                this.formDispatch(actions.merge(`local`, attr))\n              } else {\n                this.formDispatch(actions.change(`local.${ attr }`, value))\n              }\n            } }\n          />\n        </FormGroup>\n      </LocalForm>\n    </>\n  }\n}\n"],"sourceRoot":""}
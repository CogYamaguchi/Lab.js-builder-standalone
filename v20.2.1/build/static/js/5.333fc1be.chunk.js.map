{"version":3,"sources":["components/ComponentOptions/components/Content/Canvas/components/form/AddDropDown.js","components/ComponentOptions/components/Content/Canvas/components/form/Dimensions/index.js","components/ComponentOptions/components/Content/Canvas/components/form/Layers.js","components/ComponentOptions/components/Content/Canvas/components/form/ColorDropDown/index.js","components/ComponentOptions/components/Content/Canvas/components/form/StrokeWidthDropDown.js","components/ComponentOptions/components/Content/Canvas/components/form/Details/AoiOptions.js","components/ComponentOptions/components/Content/Canvas/components/form/Details/ImageOptions.js","components/ComponentOptions/components/Content/Canvas/components/form/Details/TextOptions.js","components/ComponentOptions/components/Content/Canvas/components/form/Details/index.js","components/ComponentOptions/components/Content/Canvas/components/form/Style.js","components/ComponentOptions/components/Content/Canvas/components/fabric/background.js","components/ComponentOptions/components/Content/Canvas/logic.js","components/ComponentOptions/components/Content/Canvas/components/fabric/index.js","components/ComponentOptions/components/Content/Canvas/components/fabric/overlay.js","components/ComponentOptions/components/Content/Canvas/editor.js"],"names":["AddDropDown","addHandler","cloneHandler","removeHandler","selection","id","fileSelector","React","createRef","ButtonGroup","UncontrolledButtonDropdown","direction","DropdownToggle","outline","color","Icon","icon","style","position","top","DropdownMenu","DropdownItem","header","onClick","divider","content","a","current","select","forEach","localPath","src","console","log","disabled","undefined","type","Button","FileSelector","ref","component","accept","contextTypes","PropTypes","oneOfType","string","number","InputGroup","className","InputGroupAddon","addonType","fixedWidth","name","placeholder","InputGroupText","includes","fontFamily","autoScale","upHandler","downHandler","Swatch","clickHandler","backgroundColor","border","colors","grays","iconWeight","iconFallbackWeight","useState","dropdownOpen","setDropdownOpen","hiddenColor","useField","field","helpers","choose","setFieldValue","setValue","ButtonDropdown","isOpen","toggle","minWidth","caret","weight","fallbackWeight","right","tag","height","map","c","key","width","focus","click","visibility","tabIndex","Line","onChange","fontSize","paddingTop","paddingBottom","AoiOptions","Input","ImageOptions","changeHandler","tab","size","value","fontStyle","fontWeight","alignment","textAlign","originX","icons","Toggle","Object","keys","Options","props","TextOptions","inNavbar","gridSize","offsetX","offsetY","window","devicePixelRatio","backgroundTile","fabric","StaticCanvas","setDimensions","Array","fill","_","i","x","y","Math","floor","add","Rect","left","defaults","angle","stroke","isPlaceholder","o","unprocessedOptions","filePlaceholderRegex","toCanvas","object","componentId","store","ignore","output","transform","result","v","k","s","fallback","Number","toNumber","lockMovementX","lockMovementY","lockScalingX","lockScalingY","lockRotation","radius","rx","ry","x1","x2","y1","y2","scaleX","naturalWidth","scaleY","naturalHeight","filePlaceholderMatch","match","imagePath","file","getLocalFile","resolveImage","fromCanvas","oldObject","pickBy","startsWith","toObject","renderFill","Image","prototype","propertiesToInclude","this","getOriginalSize","apply","_src","_renderFill","ctx","_pattern","save","beginPath","w","h","fillStyle","fillRect","restore","fromObject","_object","callback","util","clone","loadImage","img","error","image","crossOrigin","Aoi","createClass","label","initialize","options","callSuper","forceAsync","_fromObject","disableStyleCopyPaste","FabricCanvas","Component","constructor","args","super","state","objects","activeObject","updateActive","bind","canvasRef","componentDidMount","viewPort","el","parentElement","clientWidth","max","ceil","parseInt","canvas","Canvas","preserveObjectStacking","enableRetinaScaling","viewportTransform","set","cornerSize","cornerStyle","lockSkewingX","lockSkewingY","rotatingPointOffset","padding","strokeLineJoin","transparentCorners","Circle","hasRotatingPoint","lockUniScaling","setControlsVisibility","ml","mr","mt","mb","bl","br","tl","tr","IText","hasControls","data","loadFromJSON","setupSnapping","setupHandlers","setupGrid","setupOverlay","requestRenderAll","addEventListener","componentWillUnmount","removeEventListener","threshold","nearestGrid","stepSize","round","snap","abs","snappedCoord","on","target","e","shiftKey","setCoords","deleteHandler","updateHandler","updateSelectionHandler","clearSelectionHandler","setBackgroundColor","Pattern","source","makeBackground","getElement","setOverlayImage","overlay","setViewportTransform","vp","Path","setOptions","makeOverlay","toDataURL","originY","idSource","setControlVisible","Ellipse","Triangle","sqrt","placeholderMatch","context","Promise","resolve","reject","newObject","setActiveObject","getActiveObjects","modifyActive","method","discardActiveObject","remove","setSrc","call","cloneActive","render","contextType","ReactReduxContext","trulyUniqueId","existingIds","candidate","uniqueId","emptyFormData","CanvasEditor","_isMounted","filter","isObject","newId","push","fromPairs","prepareData","order","updateState","form","setState","updateForm","mode","_objects","setValues","addContent","updateContent","updateOrder","deleteContent","omit","updateCanvas","updateFromForm","formData","newData","innerRef","initialValues","FormGroup","interval","onSave","newState","Layers","Style","attr"],"mappings":"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","file":"static/js/5.333fc1be.chunk.js","sourcesContent":["\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { UncontrolledButtonDropdown,\r\n  DropdownToggle, DropdownMenu, DropdownItem,\r\n  Button, ButtonGroup } from 'reactstrap'\r\n\r\nimport Icon from '../../../../../../Icon'\r\nimport FileSelector from '../../../../../../FileSelector'\r\n\r\nconst AddDropDown = (\r\n  { addHandler, cloneHandler, removeHandler, selection },\r\n  { id }\r\n) => {\r\n  let fileSelector = React.createRef()\r\n\r\n  return <>\r\n    <ButtonGroup>\r\n      <UncontrolledButtonDropdown direction=\"up\">\r\n        <DropdownToggle outline color=\"secondary\">\r\n          <Icon\r\n            icon=\"plus\"\r\n            style={{\r\n              position: 'relative',\r\n              top: '0.5px'\r\n            }}\r\n          />\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem header>Shapes</DropdownItem>\r\n          <DropdownItem\r\n            onClick={ () => addHandler('line') }\r\n          >\r\n            Line\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            onClick={ () => addHandler('circle') }\r\n          >\r\n            Circle\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            onClick={ () => addHandler('ellipse') }\r\n          >\r\n            Ellipse\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            onClick={ () => addHandler('triangle') }\r\n          >\r\n            Triangle\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            onClick={ () => addHandler('rect') }\r\n          >\r\n            Rectangle\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem header>Text</DropdownItem>\r\n          <DropdownItem\r\n            onClick={ () => addHandler('text', { content: 'text' }) }\r\n          >\r\n            Text\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem header>Media</DropdownItem>\r\n          <DropdownItem\r\n            onClick={ async () => {\r\n              try {\r\n                const files = await fileSelector.current.select()\r\n                files.forEach(({ localPath }) => {\r\n                  addHandler('image', {\r\n                    src: `\\${ this.files[\"${ localPath }\"] }`\r\n                  })\r\n                })\r\n              } catch (error) {\r\n                console.log('Error while inserting images', error)\r\n              }\r\n            } }\r\n          >\r\n            Image\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem header>Interaction</DropdownItem>\r\n          <DropdownItem\r\n            onClick={ () => addHandler('aoi') }\r\n          >\r\n            AOI\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem header>From selected</DropdownItem>\r\n          <DropdownItem\r\n            onClick={ cloneHandler }\r\n            disabled={ !selection || selection.type === undefined }\r\n          >\r\n            Duplicate\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <Button\r\n        outline color=\"secondary\"\r\n        onClick={ removeHandler }\r\n        disabled={ !selection || selection.type === undefined }\r\n      >\r\n        <Icon icon=\"trash\" />\r\n      </Button>\r\n    </ButtonGroup>\r\n    <FileSelector\r\n      ref={ fileSelector }\r\n      component={ id }\r\n      accept=\"image/*\"\r\n    />\r\n  </>\r\n}\r\n\r\nAddDropDown.contextTypes = {\r\n  id: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n}\r\n\r\nexport default AddDropDown\r\n","import React from 'react'\r\n\r\nimport { Field } from 'formik'\r\n\r\nimport { InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap'\r\nimport Icon from '../../../../../../../Icon'\r\n\r\nimport './index.css'\r\n\r\nexport default ({ selection, type }) =>\r\n  <InputGroup className=\"dimension-toolbar minimal-width-addons ml-2\">\r\n    <InputGroupAddon addonType=\"prepend\">\r\n      <span className=\"input-group-text\">\r\n        <Icon icon=\"long-arrow-right\" fixedWidth />\r\n      </span>\r\n    </InputGroupAddon>\r\n    <Field\r\n      name=\"left\"\r\n      placeholder=\"x\"\r\n      disabled={ type === undefined }\r\n      className=\"form-control text-monospace\"\r\n    />\r\n    <InputGroupAddon addonType=\"prepend\">\r\n      <InputGroupText>\r\n        <Icon icon=\"long-arrow-down\" fixedWidth />\r\n      </InputGroupText>\r\n    </InputGroupAddon>\r\n    <Field\r\n      name=\"top\"\r\n      placeholder=\"y\"\r\n      disabled={ type === undefined }\r\n      className=\"form-control text-monospace\"\r\n    />\r\n    <InputGroupAddon addonType=\"prepend\">\r\n      <InputGroupText>\r\n        <Icon icon=\"redo\" fixedWidth />\r\n      </InputGroupText>\r\n    </InputGroupAddon>\r\n    <Field\r\n      name=\"angle\"\r\n      placeholder=\"angle\"\r\n      disabled={ ['circle', 'i-text', undefined].includes(type) }\r\n      className=\"form-control\"\r\n      style={{ fontFamily: 'Fira Mono' }}\r\n    />\r\n    <InputGroupAddon addonType=\"prepend\">\r\n      <InputGroupText>\r\n        <Icon icon=\"arrows-h\" fixedWidth />\r\n      </InputGroupText>\r\n    </InputGroupAddon>\r\n    <Field\r\n      name=\"width\"\r\n      placeholder=\"width\"\r\n      disabled={\r\n        ['i-text', undefined].includes(type)\r\n        || (type === 'image' && selection.autoScale === 'width')\r\n      }\r\n      className=\"form-control text-monospace\"\r\n    />\r\n    <InputGroupAddon addonType=\"prepend\">\r\n      <InputGroupText>\r\n        <Icon icon=\"arrows-v\" fixedWidth />\r\n      </InputGroupText>\r\n    </InputGroupAddon>\r\n    <Field\r\n      name=\"height\"\r\n      placeholder=\"height\"\r\n      disabled={\r\n        ['line', 'circle', 'i-text', undefined].includes(type)\r\n        || (type === 'image' && selection.autoScale === 'height')\r\n      }\r\n      className=\"form-control\"\r\n      style={{ fontFamily: 'Fira Mono' }}\r\n    />\r\n  </InputGroup>\r\n","import React from 'react'\r\n\r\nimport { Button, ButtonGroup } from 'reactstrap'\r\n\r\nimport Icon from '../../../../../../Icon'\r\n\r\nexport default ({ upHandler, downHandler }) =>\r\n  <ButtonGroup\r\n    className=\"ml-2\"\r\n  >\r\n    <Button outline color=\"secondary\" onClick={ upHandler }>\r\n      <Icon icon=\"arrow-up\" />\r\n    </Button>\r\n    <Button outline color=\"secondary\" onClick={ downHandler }>\r\n      <Icon icon=\"arrow-down\" />\r\n    </Button>\r\n  </ButtonGroup>\r\n","import React, { useState } from 'react'\r\n\r\nimport { ButtonDropdown, DropdownToggle,\r\n  DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport { useField } from 'formik'\r\n\r\nimport Icon from '../../../../../../../Icon'\r\n\r\nimport './index.css'\r\n\r\nconst Swatch = ({ color, clickHandler }) => {\r\n  return <div\r\n    className=\"color-swatch\"\r\n    onClick={ () => clickHandler(color) }\r\n    style={{\r\n      backgroundColor: color,\r\n      border: `1px solid ${ color === '#ffffff' ? '#ccc' : color }`,\r\n    }}\r\n  />\r\n}\r\n\r\nconst colors = [\r\n  '#0d3b83', '#0070d9', // blues\r\n  '#12864e', '#a8ca09', // greens\r\n  '#d6341a', '#fcbb0a', // red / yellow\r\n]\r\n\r\nconst grays = [\r\n  '#ffffff', '#dddddd',\r\n  '#aaaaaa', '#000000',\r\n]\r\n\r\nexport default ({ name, disabled,\r\n  icon, iconWeight, iconFallbackWeight }) => {\r\n\r\n  const [dropdownOpen, setDropdownOpen] = useState(false)\r\n  let hiddenColor = React.createRef()\r\n\r\n  const [field, , helpers] = useField({ name })\r\n\r\n  const choose = (color, setFieldValue) => {\r\n    setDropdownOpen(false)\r\n    helpers.setValue(color)\r\n  }\r\n\r\n  return <>\r\n    <ButtonDropdown\r\n      direction=\"up\"\r\n      isOpen={ dropdownOpen }\r\n      toggle={ () => setDropdownOpen(!dropdownOpen) }\r\n      style={{\r\n        minWidth: '3.5rem',\r\n      }}\r\n    >\r\n      {/* Remainder of the Dropdown */}\r\n      <DropdownToggle\r\n        caret outline color=\"secondary\"\r\n        className=\"border-left-0\"\r\n        disabled={ disabled }\r\n      >\r\n        <Icon\r\n          icon={ icon }\r\n          weight={ iconWeight }\r\n          fallbackWeight={ iconFallbackWeight }\r\n          style={{ position: 'relative', top: '1px' }}\r\n        />\r\n      </DropdownToggle>\r\n      <DropdownMenu right className=\"color-dropdown\">\r\n        {/* Predefined colors */}\r\n        <DropdownItem\r\n          tag=\"div\"\r\n          style={{ height: '136px' }}\r\n          toggle={ false }\r\n        >\r\n          {\r\n            colors.map(c =>\r\n              <Swatch\r\n                key={ c } color={ c }\r\n                clickHandler={ c => choose(c) }\r\n              />\r\n            )\r\n          }\r\n        </DropdownItem>\r\n        <DropdownItem divider />\r\n        {/* Grey values */}\r\n        <DropdownItem\r\n          tag=\"div\"\r\n          style={{ height: '90px' }}\r\n          toggle={ false }\r\n        >\r\n          {\r\n            grays.map(c =>\r\n              <Swatch\r\n                key={ c } color={ c }\r\n                clickHandler={ c => choose(c) }\r\n              />\r\n            )\r\n          }\r\n        </DropdownItem>\r\n        <DropdownItem divider />\r\n        {/* Custom color selector */}\r\n        <DropdownItem tag=\"div\" toggle={ false }>\r\n          <div\r\n            className=\"btn btn-outline-secondary\"\r\n            style={{ width: '126px' }}\r\n            onClick={ () => {\r\n              hiddenColor.current.focus()\r\n              hiddenColor.current.select()\r\n              hiddenColor.current.click()\r\n              setDropdownOpen(!dropdownOpen)\r\n            } }\r\n          >\r\n            <Icon icon=\"eye-dropper\" />\r\n          </div>\r\n        </DropdownItem>\r\n        <DropdownItem divider />\r\n        {/* Manual (text-based) color input */}\r\n        <DropdownItem tag=\"div\" toggle={ false }>\r\n          <input\r\n            type=\"text\" placeholder=\"CSS color\"\r\n            className=\"form-control w-100 text-monospace\"\r\n            {...field}\r\n          />\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </ButtonDropdown>\r\n    <input\r\n      type=\"color\"\r\n      style={{ visibility: 'hidden', position: 'absolute' }}\r\n      tabIndex={ -1 }\r\n      ref={ hiddenColor }\r\n      {...field}\r\n    />\r\n  </>\r\n}\r\n","import React from 'react'\r\n\r\nimport { UncontrolledButtonDropdown,\r\n  DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\n\r\nimport Icon from '../../../../../../Icon'\r\n\r\nconst Line = ({ height }) =>\r\n  <div\r\n    className=\"w-100\"\r\n    style={{\r\n      backgroundColor: 'black',\r\n      height: height\r\n    }}\r\n  />\r\n\r\nexport default ({ onChange, disabled }) =>\r\n  <UncontrolledButtonDropdown\r\n    direction=\"up\"\r\n    style={{\r\n      minWidth: '3.5rem',\r\n    }}\r\n  >\r\n    <DropdownToggle caret outline color=\"secondary\" disabled={ disabled }>\r\n      <Icon\r\n        icon=\"paint-brush\"\r\n        style={{\r\n          fontSize: '0.9em',\r\n        }}\r\n      />\r\n    </DropdownToggle>\r\n    <DropdownMenu>\r\n      <DropdownItem\r\n        onClick={ () => onChange(0) }\r\n      >\r\n        No line\r\n      </DropdownItem>\r\n      <DropdownItem divider />\r\n      {\r\n        [2, 5, 10].map(width =>\r\n          <DropdownItem\r\n            key={ `strokeWidthDropDown-${ width }` }\r\n            style={{ paddingTop: '10px', paddingBottom: '10px' }}\r\n            onClick={ () => onChange(width) }\r\n          >\r\n            <Line height={ `${ width }px` } />\r\n          </DropdownItem>\r\n        )\r\n      }\r\n    </DropdownMenu>\r\n  </UncontrolledButtonDropdown>\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { DropdownMenu, DropdownItem,\r\n  InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap'\r\nimport { Field } from 'formik'\r\n\r\nimport Icon from '../../../../../../../Icon'\r\nimport { Input } from '../../../../../../../Form'\r\n\r\nconst AoiOptions = () =>\r\n  <DropdownMenu right\r\n    style={{\r\n      width: '300px',\r\n    }}\r\n  >\r\n    <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\r\n      <InputGroup>\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText>\r\n            <Icon fixedWidth icon=\"tag\" />\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n        <Field\r\n          name=\"label\"\r\n          component={ Input }\r\n          placeholder=\"Label\"\r\n          className=\"text-monospace\"\r\n        />\r\n      </InputGroup>\r\n    </DropdownItem>\r\n  </DropdownMenu>\r\n\r\nAoiOptions.contextTypes = {\r\n  id: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n}\r\n\r\nexport default AoiOptions\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { DropdownMenu, DropdownItem,\r\n  InputGroup, InputGroupAddon, InputGroupText, Button } from 'reactstrap'\r\n\r\nimport FileSelectorField from '../../../../../../../FileSelector/field'\r\nimport Icon from '../../../../../../../Icon'\r\n\r\nconst ImageOptions = ({ selection, changeHandler }, { id }) =>\r\n  <DropdownMenu right\r\n    style={{\r\n      width: '500px',\r\n    }}\r\n  >\r\n    <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\r\n      <FileSelectorField\r\n        name=\"src\"\r\n        accept=\"image/*\"\r\n        tab=\"pool\"\r\n        icon=\"file-audio\"\r\n        component={ id }\r\n      />\r\n    </DropdownItem>\r\n    <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\r\n      <InputGroup className=\"d-flex flex-row image-autoscale\" size=\"sm\">\r\n        <InputGroupAddon addonType=\"prepend\" style={{ width: '25%' }}>\r\n          <InputGroupText className=\"w-100 text-center\">\r\n            Auto resize\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n        <InputGroupAddon\r\n          className=\"flex-fill\"\r\n          addonType=\"append\"\r\n        >\r\n          <Button outline\r\n            color={\r\n              !['width', 'height'].includes(selection.autoScale)\r\n                ? 'primary'\r\n                : 'secondary'\r\n            }\r\n            style={{ width: '35%' }}\r\n            onClick={ () => changeHandler('autoScale', false) }\r\n          >\r\n            <Icon icon=\"power-off\" />\r\n          </Button>\r\n          <Button outline\r\n            color={ selection.autoScale === 'width'\r\n              ? 'primary' : 'secondary' }\r\n            style={{ width: '32.5%' }}\r\n            onClick={ () => changeHandler('autoScale', 'width') }\r\n          >\r\n            <Icon icon=\"arrows-alt-h\" />\r\n          </Button>\r\n          <Button outline\r\n            color={ selection.autoScale === 'height'\r\n              ? 'primary' : 'secondary' }\r\n            style={{ width: '32.5%' }}\r\n            onClick={ () => changeHandler('autoScale', 'height') }\r\n          >\r\n            <Icon icon=\"arrows-alt-v\" />\r\n          </Button>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </DropdownItem>\r\n  </DropdownMenu>\r\n\r\nImageOptions.contextTypes = {\r\n  id: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n}\r\n\r\nexport default ImageOptions\r\n","import React from 'react'\r\nimport { DropdownMenu, DropdownItem,\r\n  Button, ButtonGroup,\r\n  InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap'\r\nimport { Field } from 'formik'\r\n\r\nimport Icon from '../../../../../../../Icon'\r\n\r\nexport default ({ selection, changeHandler }) =>\r\n  <DropdownMenu\r\n    style={{\r\n      width: '200px',\r\n    }}\r\n  >\r\n    {/* <divs> are needed here because DropdownItems are buttons,\r\n        and the buttons here can't be nested within. */}\r\n    <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\r\n      <Field\r\n        name=\"fontFamily\"\r\n        component=\"select\"\r\n        className=\"form-control custom-select\"\r\n      >\r\n        <option value=\"serif\">Serif</option>\r\n        <option value=\"sans-serif\">Sans-serif</option>\r\n        <option value=\"monospace\">Monospace</option>\r\n      </Field>\r\n    </DropdownItem>\r\n    <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\r\n      <ButtonGroup className=\"w-100 typography-font-style\">\r\n        <Button\r\n          outline color={\r\n            selection.fontStyle === 'italic'\r\n              ? 'primary'\r\n              : 'secondary'\r\n          }\r\n          className=\"w-50\"\r\n          onClick={ () => {\r\n            if (selection.fontStyle === 'italic') {\r\n              changeHandler('fontStyle', 'normal')\r\n            } else {\r\n              changeHandler('fontStyle', 'italic')\r\n            }\r\n          } }\r\n        >\r\n          <Icon icon=\"italic\" />\r\n        </Button>\r\n        <Button\r\n          outline color={\r\n            selection.fontWeight === 'bold'\r\n              ? 'primary'\r\n              : 'secondary'\r\n          }\r\n          className=\"w-50\"\r\n          onClick={ () => {\r\n            if (selection.fontWeight === 'bold') {\r\n              changeHandler('fontWeight', 'normal')\r\n            } else {\r\n              changeHandler('fontWeight', 'bold')\r\n            }\r\n          } }\r\n        >\r\n          <Icon icon=\"bold\" />\r\n        </Button>\r\n      </ButtonGroup>\r\n    </DropdownItem>\r\n    <DropdownItem divider />\r\n    <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\r\n      <InputGroup>\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText>\r\n            <Icon icon=\"text-height\" />\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n        <Field\r\n          name=\"fontSize\"\r\n          placeholder=\"Size\"\r\n          className=\"form-control text-monospace\"\r\n        />\r\n      </InputGroup>\r\n    </DropdownItem>\r\n    <DropdownItem divider />\r\n    <DropdownItem tag=\"div\" toggle={ false } className=\"mute\">\r\n      <ButtonGroup className=\"typography-alignment\">\r\n      {\r\n        /* Ideally, highlighting of the selected option\r\n            would be covered by the active property, but\r\n            the default style doesn't look good */\r\n        ['left', 'center', 'right'].map(alignment =>\r\n          <Button\r\n            key={ `text-align-${ alignment }` }\r\n            outline color={ selection.textAlign === alignment\r\n              ? 'primary'\r\n              : 'secondary'\r\n            }\r\n            onClick={ () => changeHandler({\r\n              textAlign: alignment,\r\n              originX: alignment,\r\n            }) }\r\n          >\r\n            <Icon icon={ `align-${ alignment }` } />\r\n          </Button>\r\n        )\r\n      }\r\n      </ButtonGroup>\r\n    </DropdownItem>\r\n  </DropdownMenu>\r\n","import React, { useState } from 'react'\r\n\r\nimport { ButtonDropdown, DropdownToggle } from 'reactstrap'\r\n\r\nimport Icon from '../../../../../../../Icon'\r\n\r\nimport AoiOptions from './AoiOptions'\r\nimport ImageOptions from './ImageOptions'\r\nimport TextOptions from './TextOptions'\r\n\r\nimport './index.css'\r\n\r\nconst icons = {\r\n  'aoi': 'bullseye-pointer',\r\n  'i-text': 'font',\r\n  'image': 'image',\r\n}\r\n\r\nconst Toggle = ({ type }) =>\r\n  <DropdownToggle\r\n    caret outline color=\"secondary\"\r\n    disabled={ !Object.keys(icons).includes(type) }\r\n    style={{\r\n      minWidth: '3.5rem',\r\n    }}\r\n  >\r\n    <Icon icon={ icons[type] || 'cog' } />\r\n  </DropdownToggle>\r\n\r\nconst Options = (props) => {\r\n  switch(props.selection.type) {\r\n    case 'aoi':\r\n      return <AoiOptions { ...props } />\r\n    case 'i-text':\r\n      return <TextOptions { ...props } />\r\n    case 'image':\r\n      return <ImageOptions { ...props } />\r\n    default:\r\n      return null\r\n  }\r\n}\r\n\r\nexport default ({ selection, changeHandler }) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false)\r\n\r\n  return (\r\n    <ButtonDropdown\r\n      direction=\"up\"\r\n      isOpen={ dropdownOpen }\r\n      toggle={ () => setDropdownOpen(!dropdownOpen) }\r\n      // Don't close the dropdown menu on any click\r\n      // (otherwise, clicking inside the modal triggers\r\n      // the toggle. Note that this is a hack, because\r\n      // this property happens to do what we want,\r\n      // but that is not guaranteed)\r\n      inNavbar={ true }\r\n    >\r\n      <Toggle\r\n        type={ selection.type }\r\n      />\r\n      <Options\r\n        selection={ selection }\r\n        changeHandler={ changeHandler }\r\n        toggle={ () => setDropdownOpen(false) }\r\n      />\r\n    </ButtonDropdown>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { ButtonGroup } from 'reactstrap'\r\n\r\nimport ColorDropdown from './ColorDropDown'\r\nimport StrokeWidthDropdown from './StrokeWidthDropDown'\r\nimport Details from './Details'\r\n\r\nexport default ({ selection, changeHandler }) =>\r\n  <ButtonGroup className=\"ml-2\">\r\n    <Details\r\n      selection={ selection }\r\n      changeHandler={ changeHandler }\r\n    />\r\n    <StrokeWidthDropdown\r\n      onChange={ value => changeHandler('strokeWidth', value) }\r\n      disabled={ ['image', 'aoi', undefined].includes(selection.type) }\r\n    />\r\n    <ColorDropdown\r\n      name=\"stroke\"\r\n      icon=\"circle\" iconFallbackWeight=\"r\"\r\n      disabled={ ['image', 'aoi', undefined].includes(selection.type) }\r\n    />\r\n    <ColorDropdown\r\n      name=\"fill\"\r\n      icon=\"circle\" iconFallbackWeight=\"s\"\r\n      disabled={ ['line', 'image', 'aoi', undefined].includes(selection.type) }\r\n    />\r\n  </ButtonGroup>\r\n","import { fabric } from 'fabric'\r\n\r\nexport default (gridSize, offsetX, offsetY) => {\r\n  // Correct for high-DPI devices\r\n  const size = gridSize / window.devicePixelRatio\r\n  // FIXME: Non-integer values break things\r\n\r\n  // Create a single tile\r\n  const backgroundTile = new fabric.StaticCanvas()\r\n  backgroundTile.setDimensions({\r\n    width: size, height: size,\r\n  })\r\n\r\n  // The grid needs to be filled in all four corners,\r\n  // for one pixel each\r\n  Array(4).fill().forEach((_, i) => {\r\n    const [x, y] = [i % 2 * size, Math.floor(i / 2) * size]\r\n    backgroundTile.add(new fabric.Rect({\r\n      width: 1, height: 1,\r\n      // FIXME: This is a hack, and it breaks down\r\n      // when adding window scaling\r\n      left: x - 1 + (offsetX / window.devicePixelRatio),\r\n      top: y - 1 + (offsetY / window.devicePixelRatio),\r\n      fill: 'rgba(0, 0, 0, 0.125)',\r\n    }))\r\n  })\r\n\r\n  return backgroundTile\r\n}\r\n","import { transform, pickBy } from 'lodash'\r\nimport { getLocalFile } from '../../../../../logic/util/files'\r\n\r\nconst defaults = {\r\n  left: 0, top: 0,\r\n  width: 50, height: 50,\r\n  angle: 0,\r\n  stroke: null, fill: 'black'\r\n}\r\n\r\n// TODO: Add proper validation mechanism\r\n// and alert user to nonsensical values\r\nconst toNumber = (s, fallback=0) => {\r\n  if (['', '+', '-'].includes(s)) {\r\n    return 0\r\n  } else {\r\n    return Number(s) || fallback\r\n  }\r\n}\r\n\r\nconst isPlaceholder = o =>\r\n  typeof o === 'string' && o.includes('$')\r\n\r\nconst unprocessedOptions = ['text', 'src']\r\n\r\n// TODO: This is a mess :-/\r\nexport const filePlaceholderRegex =\r\n  /^\\s*\\${\\s*this\\.files\\[['\"]([^'\"]+)['\"]\\]\\s*}\\s*$/\r\n\r\nexport const resolveImage = (src, store, id) => {\r\n  // Look up and insert image data\r\n  const filePlaceholderMatch = src?.match(filePlaceholderRegex)\r\n  if (filePlaceholderMatch) {\r\n    const imagePath = filePlaceholderMatch[1]\r\n\r\n    // Check if the requested file exists\r\n    const file = getLocalFile(store, id, imagePath)\r\n    return file?.file.content\r\n  } else if (isPlaceholder(src)) {\r\n    return undefined\r\n  } else {\r\n    return src\r\n  }\r\n}\r\n\r\nexport const toCanvas = (object, componentId, store, ignore=[]) => {\r\n  if (!object) {\r\n    return object\r\n  } else {\r\n    const output = {\r\n      ...object,\r\n      // Substitute defaults where placeholders are used\r\n      // (except for text content which is passed through,\r\n      // and image srcs, which are handled below)\r\n      ...transform(object, (result, v, k) => {\r\n        if (isPlaceholder(v) && !unprocessedOptions.includes(k)) {\r\n          result[k] = defaults[k]\r\n        } else if (['left', 'top', 'angle', 'width', 'height'].includes(k)) {\r\n          result[k] = toNumber(\r\n            object[k], defaults[k], // fallback values\r\n          )\r\n        }\r\n      }),\r\n      // Lock manipulations where placeholders are present\r\n      lockMovementX: isPlaceholder(object.left),\r\n      lockMovementY: isPlaceholder(object.top),\r\n      lockScalingX: isPlaceholder(object.width),\r\n      lockScalingY: isPlaceholder(object.height) || object.type === 'line',\r\n      lockRotation: isPlaceholder(object.angle),\r\n    }\r\n\r\n    if (object.type === 'circle') {\r\n      output.radius = output.width / 2\r\n    } else if (output.type === 'ellipse') {\r\n      output.rx = output.width / 2\r\n      output.ry = output.height / 2\r\n    } else if (output.type === 'line') {\r\n      output.x1 = output.left - output.width / 2\r\n      output.x2 = output.left + output.width / 2\r\n      output.y1 = output.top\r\n      output.y2 = output.top\r\n    } else if (output.type === 'image') {\r\n      output.scaleX = output.width / output.naturalWidth\r\n      output.scaleY = output.height / output.naturalHeight\r\n      output.width = output.naturalWidth\r\n      output.height = output.naturalHeight\r\n\r\n      output.src = resolveImage(object.src, store, componentId)\r\n    }\r\n\r\n    // Ignore specified keys (notably, text during updates from the form)\r\n    ignore.forEach(k => delete output[k])\r\n\r\n    return output\r\n  }\r\n}\r\n\r\nexport const fromCanvas = (object, oldObject) => {\r\n  if (!object || !oldObject) {\r\n    return object\r\n  }\r\n\r\n  const output = {\r\n    // Filter manipulation locks\r\n    ...pickBy(object, (v, k) => !k.startsWith('lock')),\r\n    // Placeholders can't be overridden\r\n    ...transform(object, (result, v, k) => {\r\n      if (isPlaceholder(oldObject[k]) && k !== 'text') {\r\n        result[k] = oldObject[k]\r\n      }\r\n    }),\r\n  }\r\n\r\n  if (object.type === 'image') {\r\n    output.width = isPlaceholder(oldObject['width'])\r\n      ? oldObject.width\r\n      : output.scaleX * output.naturalWidth\r\n    output.height = isPlaceholder(oldObject['height'])\r\n      ? oldObject.height\r\n      : output.scaleY * output.naturalHeight\r\n    output.autoScale = oldObject.autoScale\r\n  }\r\n\r\n  return output\r\n}\r\n","import React, { Component, createRef } from 'react'\r\nimport { ReactReduxContext } from 'react-redux'\r\n\r\nimport { fabric } from 'fabric'\r\n\r\nimport makeBackground from './background'\r\nimport makeOverlay from './overlay'\r\n\r\nimport { filePlaceholderRegex } from '../../logic'\r\nimport { getLocalFile } from '../../../../../../../logic/util/files'\r\n\r\n// Customize image behavior ----------------------------------------------------\r\n\r\nfabric.Image.prototype.toObject = (function(toObject) {\r\n  return function(propertiesToInclude) {\r\n    const { width, height } = this.getOriginalSize()\r\n    return {\r\n      ...toObject.apply(this, [propertiesToInclude]),\r\n      // Save the image's original resolution,\r\n      // but fall back onto raw width and height\r\n      // if these are not available.\r\n      // (i.e. if the image couldn't be loaded)\r\n      naturalWidth: width || this.width,\r\n      naturalHeight: height || this.height,\r\n      // Restore original (placeholder-based) path\r\n      // for export (this is useful mostly when new\r\n      // images are added, after that, updates to\r\n      // placeholder-based attributes are blocked by\r\n      // editor logic)\r\n      src: this._src ? this._src : this.src,\r\n    }\r\n  }\r\n})(fabric.Image.prototype.toObject)\r\n\r\nfabric.Image.prototype._renderFill = (function(renderFill) {\r\n  return function(ctx) {\r\n    if (!this.src && !this._pattern) {\r\n      ctx.save()\r\n      ctx.beginPath()\r\n      const w = this.width || 50\r\n      const h = this.height || 50\r\n      ctx.fillStyle = 'rgba(50, 50, 50, 0.25)'\r\n      ctx.fillRect(\r\n        -w / 2, -h / 2,\r\n        w, h,\r\n      )\r\n      ctx.restore()\r\n    } else {\r\n      // Use standard rendering path\r\n      renderFill.apply(this, [ctx])\r\n    }\r\n  }\r\n})(fabric.Image.prototype._renderFill)\r\n\r\nfabric.Image.fromObject = function(_object, callback) {\r\n  var object = fabric.util.object.clone(_object)\r\n  fabric.util.loadImage(object.src, function(img, error) {\r\n    // Substitute empty image in case of error\r\n    const image = new fabric.Image(\r\n      error ? new Image() : img,\r\n      object\r\n    )\r\n    image.crossOrigin = \"anonymous\"\r\n\r\n    // Pretend that we were successful in any case\r\n    callback(image)\r\n  })\r\n}\r\n\r\n// Add AOI object type ---------------------------------------------------------\r\n\r\n// (apparently fabric requires camelcased constructors)\r\nfabric.Aoi = fabric.util.createClass(fabric.Rect, {\r\n  type: 'aoi',\r\n  label: '',\r\n  initialize: function(options={}) {\r\n    options.fill = 'rgba(0, 0, 0, 0.2)'\r\n    this.callSuper('initialize', options)\r\n  },\r\n})\r\n\r\nfabric.Aoi.fromObject = function(object, callback, forceAsync) {\r\n  return fabric.Object._fromObject('Aoi', object, callback, forceAsync);\r\n}\r\n\r\n// Customize text behavior -----------------------------------------------------\r\n// Always paste and apply style\r\nfabric.disableStyleCopyPaste = true\r\n\r\n// Canvas component ------------------------------------------------------------\r\n\r\nconst handlePadding = 6\r\n\r\nexport default class FabricCanvas extends Component {\r\n  static contextType = ReactReduxContext\r\n\r\n  constructor(...args) {\r\n    super(...args)\r\n    this.state = {\r\n      objects: {},\r\n      activeObject: null,\r\n    }\r\n\r\n    this.updateActive = this.updateActive.bind(this)\r\n    this.canvasRef = createRef()\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Options\r\n    const gridSize = 25\r\n    const snapThreshold = 10\r\n    const viewPort = [800, 600]\r\n\r\n    // Initialize canvas element\r\n    const el = this.canvasRef.current.parentElement\r\n\r\n    this.width = el.clientWidth - 15\r\n    this.height = Math.max(\r\n      Math.ceil(el.clientWidth * 9/16),\r\n      viewPort[1] + 2 * gridSize,\r\n    )\r\n\r\n    // Calculate offsets so that the grid runs\r\n    // through the center of the canvas\r\n    this.offsetX = parseInt((this.width / 2) % gridSize, 10)\r\n    this.offsetY = parseInt((this.height / 2) % gridSize, 10)\r\n\r\n    // Initialize fabric canvas\r\n    this.canvas = new fabric.Canvas()\r\n    this.canvas.initialize(this.canvasRef.current, {\r\n      width: this.width,\r\n      height: this.height,\r\n      preserveObjectStacking: true,\r\n      enableRetinaScaling: true,\r\n      viewportTransform: [\r\n        1, 0,\r\n        0, 1,\r\n        this.width/2, this.height/2\r\n      ],\r\n      selection: false, // No multiple selection\r\n    })\r\n\r\n    // UI Customization --------------------------------------------------------\r\n    // Overall\r\n    fabric.Object.prototype.set({\r\n      cornerSize: 9,\r\n      cornerStyle: 'circle',\r\n      lockSkewingX: true,\r\n      lockSkewingY: true,\r\n      rotatingPointOffset: 30,\r\n      padding: handlePadding,\r\n      strokeLineJoin: 'round',\r\n      transparentCorners: false,\r\n    })\r\n\r\n    // Per-type\r\n    fabric.Circle.prototype.hasRotatingPoint = false\r\n    fabric.Circle.prototype.lockUniScaling = true\r\n    fabric.Image.prototype.lockUniScaling = true\r\n    fabric.Line.prototype.lockScalingY = true\r\n    fabric.Line.prototype.setControlsVisibility({\r\n      ml: true,\r\n      mr: true,\r\n      mt: false,\r\n      mb: false,\r\n      bl: false,\r\n      br: false,\r\n      tl: false,\r\n      tr: false,\r\n    })\r\n\r\n    fabric.IText.prototype.hasControls = false\r\n\r\n    // Load data from props, if provided ---------------------------------------\r\n\r\n    if (this.props.data) {\r\n      this.canvas.loadFromJSON(\r\n        { objects: this.props.data },\r\n        () => {\r\n          this.setupSnapping(gridSize, snapThreshold)\r\n          this.setupHandlers()\r\n          this.setupGrid(gridSize)\r\n          this.setupOverlay(viewPort)\r\n          this.canvas.requestRenderAll()\r\n        },\r\n      )\r\n    } else {\r\n      this.setupSnapping(gridSize, snapThreshold)\r\n      this.setupHandlers()\r\n      this.setupGrid(gridSize)\r\n      this.setupOverlay(viewPort)\r\n    }\r\n\r\n    // Listen for preload event\r\n    window.addEventListener('preview:preempt', this.updateActive)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('preview:preempt', this.updateActive)\r\n  }\r\n\r\n  setupSnapping(gridSize, threshold) {\r\n    const nearestGrid = (x, stepSize=gridSize) =>\r\n      Math.round(x / stepSize) * stepSize\r\n\r\n    const snap = (x) =>\r\n      Math.abs(x - nearestGrid(x)) < threshold\r\n\r\n    const snappedCoord = (x) =>\r\n      snap(x) ? nearestGrid(x) : x\r\n\r\n    // Snap origin on move\r\n    this.canvas.on('object:moving', ({ target, e: { shiftKey } }) => {\r\n      const { left, top } = target\r\n\r\n      // TODO: It would be nice to show the snapping point,\r\n      // as it depends on the origin coordinates\r\n\r\n      // TODO: Re-think snapping override key\r\n      // (should match common software, e.g. Inkscape,\r\n      // and be consistent with scaling, which depends\r\n      // on several modifier keys)\r\n      if (!shiftKey && (snap(left) || snap(top))) {\r\n        // Round position to closest grid point\r\n        target.set({\r\n          left: snappedCoord(left),\r\n          top:  snappedCoord(top),\r\n        }).setCoords()\r\n      }\r\n    })\r\n\r\n    // Rotation snapping\r\n    // (currently at 15deg increments)\r\n    this.canvas.on('object:rotating', ({ target, e: { shiftKey } }) => {\r\n      if (!shiftKey) {\r\n        target.set({\r\n          angle: nearestGrid(target.angle, 15)\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  setupHandlers() {\r\n    // Hand on any changes to appropriate handlers\r\n    this.canvas.on('object:added', this.props.addHandler)\r\n    this.canvas.on('object:removed', this.props.deleteHandler)\r\n    this.canvas.on('object:modified', ({ target }) => {\r\n      // Normalize scaling\r\n      target.set({\r\n        width: target.width && target.type !== 'image'\r\n          ? target.width * target.scaleX\r\n          : target.width,\r\n        height: target.height && target.type !== 'image'\r\n          ? target.height * target.scaleY\r\n          : target.height,\r\n        radius: target.radius ? target.radius * target.scaleX : target.radius,\r\n        rx: target.rx ? target.rx * target.scaleX : target.rx,\r\n        ry: target.ry ? target.ry * target.scaleY : target.ry,\r\n        scaleX: target.type === 'image'\r\n          ? target.scaleX\r\n          : 1,\r\n        scaleY: target.type === 'image'\r\n          ? target.scaleY\r\n          : 1,\r\n      })\r\n\r\n      // Hand changes on\r\n      this.props.updateHandler({ target })\r\n    })\r\n\r\n    // Pass on further useful events -------------------------------------------\r\n    this.canvas.on('selection:created', this.props.updateSelectionHandler)\r\n    this.canvas.on('selection:updated', this.props.updateSelectionHandler)\r\n    this.canvas.on('selection:cleared', this.props.clearSelectionHandler)\r\n  }\r\n\r\n  setupGrid(gridSize) {\r\n    this.canvas.setBackgroundColor(new fabric.Pattern({\r\n      source: makeBackground(gridSize, this.offsetX, this.offsetY).getElement(),\r\n    }))\r\n  }\r\n\r\n  setupOverlay(viewPort) {\r\n    this.canvas.setOverlayImage(\r\n      // There used to be the option\r\n      // { multiplier: 1 / window.devicePixelRatio }\r\n      // in the call to toDataURL, but the extra scaling\r\n      // doesn't seem to be necessary any more\r\n      makeOverlay(this.width, this.height, viewPort).toDataURL(),\r\n      () => this.canvas.requestRenderAll(),\r\n      // This is somewhat weird -- the transformation\r\n      // should really also apply to the overlay,\r\n      { originX: 'center', originY: 'center', _pattern: true }\r\n    )\r\n  }\r\n\r\n  // TODO: External change handlers\r\n  // need to call change handler directly\r\n  async add(type, options={}) {\r\n    // This construction is dubious\r\n    const newObject = await (async () => {\r\n      const defaults = {\r\n        originX: 'center',\r\n        originY: 'center',\r\n        left: 0,\r\n        top: 0,\r\n        fill: 'black',\r\n        id: this.props.idSource(),\r\n      }\r\n\r\n      switch(type) {\r\n        case 'line':\r\n          return new fabric.Line([-50, 0, 50, 0], {\r\n            stroke: 'black',\r\n            id: defaults.id, // Re-use id generated above\r\n            originX: 'center',\r\n            originY: 'center',\r\n          })\r\n        case 'circle':\r\n          return new fabric.Circle({\r\n            radius: 27.5,\r\n            ...defaults,\r\n            ...options,\r\n          }).setControlVisible('mtr', false)\r\n        case 'ellipse':\r\n          return new fabric.Ellipse({\r\n            rx: 30,\r\n            ry: 25,\r\n            ...defaults,\r\n            ...options,\r\n          })\r\n        case 'triangle':\r\n          return new fabric.Triangle({\r\n            width: 2 * 50 * Math.sqrt(1/3),\r\n            height: 50,\r\n            ...defaults,\r\n            ...options,\r\n          })\r\n        case 'rect':\r\n          return new fabric.Rect({\r\n            width: 50, height: 50,\r\n            ...defaults,\r\n            ...options,\r\n          })\r\n        case 'text':\r\n          const content = options.content\r\n          delete options.content\r\n          return new fabric.IText(content, {\r\n            fontFamily: 'sans-serif',\r\n            fontSize: 32,\r\n            textAlign: 'center',\r\n            ...defaults,\r\n            ...options,\r\n          })\r\n        case 'image':\r\n          const placeholderMatch = options.src.match(filePlaceholderRegex)\r\n          if (placeholderMatch) {\r\n            // Save original placeholder-based path\r\n            options._src = options.src\r\n            options.src = getLocalFile(\r\n              this.context.store,\r\n              this.props.id,\r\n              placeholderMatch[1]\r\n            ).file.content\r\n          }\r\n          const img = await new Promise((resolve, reject) => {\r\n            const image = new Image()\r\n\r\n            image.addEventListener('load', () => resolve(image))\r\n            image.addEventListener('error', e => reject(e))\r\n\r\n            image.crossOrigin = \"anonymous\"\r\n            image.src = options.src\r\n          })\r\n\r\n          return new fabric.Image(img, {\r\n            ...defaults,\r\n            ...options,\r\n          })\r\n        case 'aoi':\r\n          return new fabric.Aoi({\r\n            width: 50, height: 50,\r\n            ...defaults,\r\n          })\r\n        default:\r\n          return undefined\r\n      }\r\n    })()\r\n\r\n    if (newObject) {\r\n      this.canvas.add(newObject)\r\n      this.canvas.setActiveObject(newObject)\r\n    }\r\n  }\r\n\r\n  updateActive() {\r\n    const selection = this.canvas.getActiveObjects()\r\n    selection.forEach((target) => {\r\n      if (target.type === 'i-text') {\r\n        this.props.updateHandler({ target })\r\n      }\r\n    })\r\n  }\r\n\r\n  modifyActive(method, ...args) {\r\n    // Find selected object or group thereof\r\n    // FIXME: In 2.0, this appears to covers groups, see\r\n    // https://github.com/kangax/fabric.js/blob/10545cec7773cd1c00312c1428f09ea43fd8ac52/test/unit/canvas.js#L1263\r\n    const selection = this.canvas.getActiveObjects()\r\n\r\n    // At present, multiple selection is deactivated, so that this loop\r\n    // will only ever run once (there were some issues with multiple\r\n    // selection / concurrent modification)\r\n    selection.forEach(o => {\r\n      switch(method) {\r\n        case 'remove':\r\n          this.canvas.discardActiveObject()\r\n          this.canvas.remove(o)\r\n          break\r\n        default:\r\n          // Update image src, if required (and then rerender)\r\n          if (o.type === 'image' &&\r\n            args[0] && args[0].src && // new options are provided ...\r\n            o.src !== args[0].src     // ... and the src changed\r\n          ) {\r\n            o.setSrc(args[0].src, () => this.canvas.requestRenderAll())\r\n          }\r\n\r\n          // Apply modifications\r\n          o[method].call(o, ...args)\r\n\r\n          // Update handle coordinates\r\n          o.setCoords()\r\n      }\r\n    })\r\n\r\n    // Re-render canvas\r\n    this.canvas.requestRenderAll()\r\n  }\r\n\r\n  cloneActive() {\r\n    this.canvas.getActiveObjects().map(\r\n      o => o.clone(\r\n        c => {\r\n          c.id = this.props.idSource()\r\n          this.canvas.add(c)\r\n          this.canvas.setActiveObject(c)\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  toObject() {\r\n    return this.canvas.toObject(['id'])\r\n  }\r\n\r\n  render () {\r\n    return <canvas ref={ this.canvasRef } />\r\n  }\r\n}\r\n","import { fabric } from 'fabric'\r\n\r\nexport default (width, height, viewPort) => {\r\n  const overlay = new fabric.StaticCanvas()\r\n  overlay.setDimensions({\r\n    width: width + 20, height: height + 20,\r\n  })\r\n\r\n  // Transform coordinate system\r\n  overlay.setViewportTransform([\r\n    1, 0, 0, 1,\r\n    width/2 + 10, height/2 + 10\r\n  ])\r\n\r\n  // Draw viewport margin ------------------------------------------------------\r\n  const vp = new fabric.Path(\r\n    `M ${ -width/2 - 10 } ${ -height/2 - 10 } ` +\r\n    `L ${ -width/2 - 10 } ${ +height/2 + 10 } ` +\r\n    `L ${ +width/2 + 10 } ${ +height/2 + 10 } ` +\r\n    `L ${ +width/2 + 10 } ${ -height/2 - 10 } ` +\r\n    `L ${ -width/2 - 10 } ${ -height/2 - 10 } z ` +\r\n    // Lines are offset here to make them sharp\r\n    `M ${ -viewPort[0]/2 - 0.5 } ${ -viewPort[1]/2 - 0.5 } ` +\r\n    `L ${ +viewPort[0]/2 - 0.5 } ${ -viewPort[1]/2 - 0.5 } ` +\r\n    `L ${ +viewPort[0]/2 - 0.5 } ${ +viewPort[1]/2 - 0.5 } ` +\r\n    `L ${ -viewPort[0]/2 - 0.5 } ${ +viewPort[1]/2 - 0.5 } ` +\r\n    `L ${ -viewPort[0]/2 - 0.5 } ${ -viewPort[1]/2 - 0.5 } z`\r\n  )\r\n\r\n  vp.setOptions({ fill: 'rgba(255, 255, 255, 0.6)' })\r\n  overlay.add(vp)\r\n\r\n  // Draw viewPort border ------------------------------------------------------\r\n  overlay.add(new fabric.Rect({\r\n    width: viewPort[0] + 1,\r\n    height: viewPort[1] + 1,\r\n    left: -viewPort[0]/2 - 1,\r\n    top: -viewPort[1]/2 - 1,\r\n    fill: 'transparent',\r\n    stroke: 'rgba(0, 0, 0, 0.125)',\r\n  }))\r\n\r\n  return overlay\r\n}\r\n","import React, { Component } from 'react'\r\nimport { ReactReduxContext } from 'react-redux'\r\n\r\nimport { Formik } from 'formik'\r\nimport { AutoSave } from '../../../../Form'\r\n\r\nimport { FormGroup } from 'reactstrap'\r\nimport { fromPairs, isObject, omit, uniqueId } from 'lodash'\r\n\r\nimport AddDropDown from './components/form/AddDropDown'\r\nimport Dimensions from './components/form/Dimensions'\r\nimport Layers from './components/form/Layers'\r\nimport Style from './components/form/Style'\r\n\r\nimport FabricCanvas from './components/fabric'\r\nimport { fromCanvas, toCanvas } from './logic'\r\n\r\nconst trulyUniqueId = (existingIds=[]) => {\r\n  let candidate = uniqueId()\r\n\r\n  // Make sure no ids are used multiple times\r\n  while (existingIds.includes(candidate)) {\r\n    candidate = uniqueId()\r\n  }\r\n\r\n  return candidate\r\n}\r\n\r\nconst prepareData = data => {\r\n  const existingIds = data\r\n    .filter(c => isObject(c) && c.id !== undefined)\r\n    .map(c => c.id)\r\n\r\n  const output = data\r\n    .filter(c => isObject(c))\r\n    .map(c => {\r\n      // Add new id where not already present\r\n      if (c.id) {\r\n        return [c.id, c]\r\n      } else {\r\n        const newId = trulyUniqueId(existingIds)\r\n        existingIds.push(newId)\r\n        c.id = newId\r\n        return [c.id, c]\r\n      }\r\n    })\r\n\r\n  return [\r\n    fromPairs(output), // Object with id => data mapping\r\n    output.map(o => o[0]) // Array of ids in order\r\n  ]\r\n}\r\n\r\nconst emptyFormData = {\r\n  left: '', top: '', angle: '',\r\n  width: '', height: '',\r\n}\r\n\r\nexport default class CanvasEditor extends Component {\r\n  static contextType = ReactReduxContext\r\n  _isMounted = false\r\n\r\n  constructor(...args) {\r\n    super(...args)\r\n\r\n    const [data, order] = prepareData(this.props.data)\r\n    this.state = {\r\n      data, order,\r\n      selection: undefined,\r\n    }\r\n    this.updateState = this.updateState.bind(this)\r\n\r\n    this.canvas = React.createRef()\r\n    this.form = React.createRef()\r\n  }\r\n\r\n  setState(data) {\r\n    if (this._isMounted) {\r\n      // Update component state, then store\r\n      super.setState(data, () => {\r\n        this.updateForm()\r\n        this.updateState()\r\n      })\r\n    } else {\r\n      // Flush canvas data directly to store\r\n      this.updateState('override')\r\n    }\r\n  }\r\n\r\n  updateState(mode='local') {\r\n    if (mode === 'override') {\r\n      // Update from raw canvas state\r\n      // TODO: Investigate implications of this, specifically\r\n      // avoid unnecessary invalidation/object mutations\r\n      this.props.onChange(\r\n        this.canvas.current.canvas._objects.map(o => fromCanvas(\r\n          o.toObject(['id', 'label']),\r\n          this.state.data[o.id],\r\n        ))\r\n      )\r\n    } else {\r\n      // Update from component state\r\n      this.props.onChange(\r\n        this.canvas.current.canvas._objects.map(o => this.state.data[o.id])\r\n      )\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false\r\n    this.canvas.current.updateActive()\r\n  }\r\n\r\n  // Selection -----------------------------------------------------------------\r\n\r\n  set selection(id) {\r\n    this.setState({ selection: id })\r\n    if (id === undefined) {\r\n      this.form.current.setValues(emptyFormData)\r\n    }\r\n  }\r\n\r\n  get selection() {\r\n    return this.state.data[this.state.selection] || { type: undefined }\r\n  }\r\n\r\n  // User action handlers ------------------------------------------------------\r\n\r\n  addContent(target) {\r\n    this.updateContent(target, false)\r\n    this.updateOrder()\r\n  }\r\n\r\n  deleteContent(target) {\r\n    this.setState({ data: omit(this.state.data, [target.id]) })\r\n    this.selection = undefined\r\n  }\r\n\r\n  updateContent(target, updateCanvas=true) {\r\n    // Save the updated object in editor state,\r\n    // after converting it into a raw object\r\n    if (target.id) {\r\n      this.setState({\r\n        data: {\r\n          ...this.state.data,\r\n          [target.id]: target\r\n        }\r\n      })\r\n\r\n      // Reflect modification on canvas\r\n      if (updateCanvas) {\r\n        this.canvas.current.modifyActive(\r\n          'set', toCanvas(target, this.props.id, this.context.store, ['text'])\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  updateOrder() {\r\n    this.setState({ order: this.canvas.current.canvas._objects.map(o => o.id) })\r\n  }\r\n\r\n  // Form data handling --------------------------------------------------------\r\n\r\n  // TODO: Think about merging this with the updateContent\r\n  updateFromForm(formData) {\r\n    // Prevent updates if the data for the currently selected object\r\n    // is not yet available in the editor state. This catches a weird\r\n    // edge case during object cloning where an object is added and\r\n    // the selection changes, but the data is not yet available through\r\n    // the editor state, even though it catches up shortly after.\r\n    // This glitch likely reflects an issue in the underlying updating\r\n    // and syncronisation logic, and will require a more careful\r\n    // analysis in the mid-term\r\n    if (this.state.data[this.state.selection]) {\r\n      const newData = { ...formData }\r\n\r\n      this.updateContent({\r\n        ...newData,\r\n        // Preserve type information\r\n        // (which is sometimes lost through the form)\r\n        type: this.state.selection\r\n          ? this.state.data[this.state.selection].type\r\n          : undefined,\r\n        id: this.state.selection,\r\n      }, true) // also update canvas\r\n    }\r\n  }\r\n\r\n  updateForm() {\r\n    this.form.current.setValues(this.selection)\r\n  }\r\n\r\n  uniqueId() {\r\n    return trulyUniqueId(this.state.order)\r\n  }\r\n\r\n  render() {\r\n    const selection = this.selection\r\n\r\n    return <>\r\n      <FabricCanvas\r\n        id={ this.props.id }\r\n        data={ this.state.order.map(id => toCanvas(this.state.data[id], this.props.id, this.context.store)) }\r\n        ref={ this.canvas }\r\n        addHandler={\r\n          ({ target }) => this.addContent(target.toObject(['id', 'label']))\r\n        }\r\n        deleteHandler={ ({ target }) => this.deleteContent(target) }\r\n        updateHandler={ ({ target }) => {\r\n          this.updateContent(\r\n            fromCanvas(\r\n              target.toObject(['id', 'label']),\r\n              this.state.data[target.id],\r\n            ),\r\n            false,\r\n          )\r\n        } }\r\n        updateSelectionHandler={ ({ target }) => this.selection = target.id }\r\n        clearSelectionHandler={ () => this.selection = undefined }\r\n        idSource={ () => this.uniqueId() }\r\n      />\r\n      <hr />\r\n      <Formik\r\n        innerRef={ this.form }\r\n        initialValues={ selection }\r\n      >\r\n        <FormGroup className=\"toolbar d-flex\">\r\n          <AutoSave\r\n            interval={ 25 }\r\n            onSave={ newState => {\r\n              // Avoid an infinite updating cycle\r\n              // (TODO: There must be a smarter way! Also, this still\r\n              // re-renders twice for every change, for unknown reasons)\r\n              if (newState !== selection) {\r\n                this.updateFromForm(newState)\r\n              }\r\n            } }\r\n          />\r\n          <AddDropDown\r\n            addHandler={ (...args) => this.canvas.current.add(...args) }\r\n            removeHandler={ () => this.canvas.current.modifyActive('remove') }\r\n            cloneHandler={ () => this.canvas.current.cloneActive() }\r\n            selection={ selection }\r\n          />\r\n          <Layers\r\n            type={ selection.type }\r\n            upHandler={ () => {\r\n              this.canvas.current.modifyActive('bringForward')\r\n              // The canvas does not signal this modification,\r\n              // so trigger update manually\r\n              this.updateOrder()\r\n            } }\r\n            downHandler={ () => {\r\n              this.canvas.current.modifyActive('sendBackwards')\r\n              this.updateOrder()\r\n            } }\r\n          />\r\n          <Dimensions\r\n            selection={ selection }\r\n            type={ selection.type }\r\n          />\r\n          <Style\r\n            type={ selection.type }\r\n            selection={ selection }\r\n            changeHandler={ (attr, value) => {\r\n              if (isObject(attr)) {\r\n                this.form.current.setValues(attr)\r\n              } else {\r\n                this.form.current.setFieldValue(attr, value)\r\n              }\r\n            } }\r\n          />\r\n        </FormGroup>\r\n      </Formik>\r\n    </>\r\n  }\r\n}\r\n"],"sourceRoot":""}
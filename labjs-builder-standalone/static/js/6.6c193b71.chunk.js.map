{"version":3,"sources":["components/ComponentOptions/components/Behavior/components/Timeline/colors.js","components/ComponentOptions/components/Behavior/components/Timeline/backgroundLayer.js","components/ComponentOptions/components/Behavior/components/Timeline/itemForm.js","components/ComponentOptions/components/Behavior/components/Timeline/item.js","components/ComponentOptions/components/Behavior/components/Timeline/itemLayer.js","components/ComponentOptions/components/Behavior/components/Timeline/widget.js"],"names":["root","outline","buttonBorder","gray","active","muted","label","t","zoom","BackgroundLayer","gridWidth","range","timeline","height","toX","x","min","digits","Math","floor","max","map","i","key","y","width","fill","colors","text","fontFamily","fontSize","align","verticalAlign","stroke","strokeWidth","points","contextTypes","PropTypes","object","number","func","padding","itemDefaults","gain","pan","rampUp","rampDown","Toolbar","add","duplicateCurrent","deleteCurrent","activeItem","setZoom","style","position","right","direction","color","icon","fixedWidth","top","header","onClick","type","payload","src","loop","frequency","detune","divider","disabled","undefined","className","_InteractionWarning","firstComponentId","id","oneOfType","string","InteractionWarning","connect","state","components","children","Header","item","form","capitalize","SettingGroupIcon","fallbackIcon","tooltip","unit","addon","createRef","ref","fallback","target","placement","delay","show","hide","SettingGroupControl","model","props","name","component","Input","GlobalSettings","pattern","numberOrPlaceholder","placeholder","SoundForm","accept","as","value","href","rel","OscillatorForm","TypeForm","handleChange","ItemForm","Item","priority","start","stop","update","calcPosition","closestLayerY","setCursor","w","lockStart","lockStop","draggable","translationX","saveTranslation","absX","getAbsolutePosition","getPosition","clearTranslation","container","box","handleRight","dragBoundFunc","clamp","onDragStart","current","shadowEnabled","this","onDragEnd","cornerRadius","onMouseEnter","onMouseLeave","shadowColor","shadowBlur","listening","visible","radius","offsetX","dragX","onDragMove","e","ItemLayer","setActive","updateItem","pos","TimelineStage","Component","constructor","super","offset","bind","handleAdd","handleDuplicateCurrent","handleDeleteCurrent","stage","wrapper","componentDidMount","setState","clientWidth","getChildContext","toTime","layer","parseInt","layerY","includes","closestLayer","clampedY","round","layerHeight","layerGutter","suggestPosition","defaultLength","sortedItems","sortBy","data","nLayers","lastEntry","length","cursor","level","newOffset","clampedOffset","formikContext","setFieldValue","updateTimelineItem","context","setImmediate","original","filter","render","defaultProps","childContextTypes"],"mappings":"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","file":"static/js/6.6c193b71.chunk.js","sourcesContent":["// TODO: This is a placeholder -- it would be nicer to export\r\n// colors directly from the bootstrap styles\r\nexport default {\r\n  root: 'rgb(33, 37, 41)', // Pseudo-black\r\n  outline: 'rgba(0, 0, 0, 0.125)', // Card border\r\n  buttonBorder: '#ced4da',\r\n  gray: '#f8f9fa',\r\n  active: '#0275d7',\r\n  muted: '#6c757d',\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Layer, Group, Text, Line, Rect } from 'react-konva'\r\nimport { range } from 'lodash'\r\n\r\nimport colors from './colors'\r\n\r\nconst floor = (x, digits) => Math.floor(x / 10**digits) * 10**digits\r\n\r\nconst label = (t, zoom) =>\r\n  zoom === 0\r\n    ? `${ t }ms`\r\n    : `${ t/1000 }s`\r\n\r\nconst BackgroundLayer = (\r\n  { gridWidth=100 },\r\n  { range: timeline, height, toX, zoom }\r\n) =>\r\n  <Layer>\r\n    {\r\n      range(\r\n        // Background blocks must start at t with an even number of digits\r\n        // FIXME: Here be dragons\r\n        floor(timeline.min - gridWidth * 10**zoom, zoom + 2),\r\n        timeline.max + gridWidth,\r\n        gridWidth * 10**zoom\r\n      ).map((t, i) =>\r\n        <Group key={ `t-${ t }` }>\r\n          <Rect\r\n            x={ toX(t) + 0.5 }\r\n            y={ 0 }\r\n            width={ gridWidth }\r\n            height={ height }\r\n            fill={ i % 2 === 0 ? 'white' : colors.gray  }\r\n          />\r\n          <Text\r\n            text={ label(t, zoom) }\r\n            x={ toX(t) + 6 }\r\n            y={ height - 15 }\r\n            fontFamily=\"Fira Sans\"\r\n            fontSize={ 10 }\r\n            fill={ colors.muted }\r\n            align=\"left\"\r\n            verticalAlign=\"bottom\"\r\n          />\r\n          <Line\r\n            x={ toX(t) + 0.5 }\r\n            y={ 0 }\r\n            stroke={ colors.gray }\r\n            strokeWidth={ 1 }\r\n            points={ [0, 0, 0, height] }\r\n          />\r\n        </Group>\r\n      )\r\n    }\r\n  </Layer>\r\n\r\nBackgroundLayer.contextTypes = {\r\n  range: PropTypes.object,\r\n  zoom: PropTypes.number,\r\n  toX: PropTypes.func,\r\n  height: PropTypes.number,\r\n  padding: PropTypes.number,\r\n}\r\n\r\nexport default BackgroundLayer\r\n","import React, { createRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { CardBody } from 'reactstrap'\r\nimport { Field } from 'formik'\r\nimport { Button, ButtonGroup,\r\n  UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem,\r\n  InputGroup, InputGroupText, FormGroup,\r\n  UncontrolledTooltip, Row, Col, Alert } from 'reactstrap'\r\nimport { capitalize } from 'lodash'\r\n\r\nimport Icon from '../../../../../Icon'\r\nimport FileSelectorField from '../../../../../FileSelector/field'\r\nimport { Input } from '../../../../../Form'\r\n\r\nimport { numberOrPlaceholder } from './util'\r\n\r\nconst itemDefaults = {\r\n  gain: '', pan: '', rampUp: '', rampDown: ''\r\n}\r\n\r\nconst Toolbar = (\r\n  { add, duplicateCurrent, deleteCurrent, activeItem },\r\n  { zoom, setZoom }\r\n) =>\r\n  <div style={{ position: 'absolute', right: '0' }}>\r\n    <ButtonGroup>\r\n      <UncontrolledButtonDropdown direction=\"up\">\r\n        <DropdownToggle outline color=\"secondary\">\r\n          <Icon\r\n            icon=\"plus\" fixedWidth\r\n            style={{\r\n              position: 'relative',\r\n              top: '0.5px'\r\n            }}\r\n          />\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem header>Audio</DropdownItem>\r\n          <DropdownItem\r\n            onClick={ () => add({\r\n              type: 'sound',\r\n              payload: { src: '', loop: false },\r\n              ...itemDefaults,\r\n            }) }\r\n          >\r\n            Sound file\r\n          </DropdownItem>\r\n          <DropdownItem\r\n            onClick={ () => add({\r\n              type: 'oscillator',\r\n              payload: { type: 'sine', frequency: '', detune: '' },\r\n              ...itemDefaults,\r\n            }) }\r\n          >\r\n            Oscillator\r\n          </DropdownItem>\r\n          <DropdownItem divider />\r\n          <DropdownItem header>From selected</DropdownItem>\r\n          <DropdownItem\r\n            onClick={ () => duplicateCurrent() }\r\n          >\r\n            Duplicate\r\n          </DropdownItem>\r\n        </DropdownMenu>\r\n      </UncontrolledButtonDropdown>\r\n      <Button\r\n        outline color=\"secondary\"\r\n        disabled={ activeItem === undefined }\r\n        onClick={ deleteCurrent }\r\n      >\r\n        <Icon\r\n          icon=\"trash\" fixedWidth\r\n          style={{\r\n            position: 'relative',\r\n            top: '0.5px'\r\n          }}\r\n         />\r\n      </Button>\r\n    </ButtonGroup>\r\n    <ButtonGroup className=\"ml-2\">\r\n      <Button\r\n        outline color=\"secondary\"\r\n        disabled={ zoom === 0 }\r\n        onClick={ () => setZoom(0) }\r\n      >\r\n        <Icon\r\n          icon=\"search-plus\" fixedWidth\r\n          style={{\r\n            position: 'relative',\r\n            top: '0.5px'\r\n          }}\r\n         />\r\n      </Button>\r\n      <Button\r\n        outline color=\"secondary\"\r\n        disabled={ zoom === 1 }\r\n        onClick={ () => setZoom(1) }\r\n      >\r\n        <Icon\r\n          icon=\"search-minus\" fixedWidth\r\n          style={{\r\n            position: 'relative',\r\n            top: '0.5px'\r\n          }}\r\n         />\r\n      </Button>\r\n    </ButtonGroup>\r\n  </div>\r\n\r\nToolbar.contextTypes = {\r\n  zoom: PropTypes.number,\r\n  setZoom: PropTypes.func,\r\n}\r\n\r\nconst _InteractionWarning = ({ firstComponentId }, { id }) => {\r\n  // Check whether the current component is the first in the study\r\n  // TODO: Add a more sophisticated check,\r\n  // taking into account nested flow components\r\n  if (firstComponentId === id) {\r\n    return (\r\n      <Alert color=\"warning\">\r\n        <h3 className=\"h6 mt-2\">\r\n          Adding audio to the first component in a study\r\n        </h3>\r\n        Many browsers don't allow a website to play media until a user has interacted with the page. To make sure that you participants can hear the sounds you're adding, please ask for user input on your study's first screen.\r\n      </Alert>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\n_InteractionWarning.contextTypes = {\r\n  id: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  firstComponentId: state.components['root'].children[0]\r\n})\r\nconst InteractionWarning = connect(mapStateToProps)(_InteractionWarning)\r\n\r\nconst Header = ({ activeItem, item, add, duplicateCurrent, deleteCurrent }) =>\r\n  <>\r\n    <Row form className=\"clearfix\">\r\n      <Col style={{ position: 'relative' }}>\r\n        <Toolbar\r\n          add={ add }\r\n          duplicateCurrent={ duplicateCurrent }\r\n          deleteCurrent={ deleteCurrent }\r\n          activeItem={ activeItem }\r\n        />\r\n        {\r\n          activeItem !== undefined\r\n            ? <h3 className=\"h5 mt-2\">\r\n                { capitalize(item.type) }\r\n              </h3>\r\n            : <div className=\"text-muted text-center\">\r\n                <small>Please add or select a timeline item</small>\r\n              </div>\r\n        }\r\n      </Col>\r\n    </Row>\r\n    {\r\n      activeItem !== undefined\r\n        ? <Row>\r\n            <Col>\r\n              <hr />\r\n              <InteractionWarning />\r\n            </Col>\r\n          </Row>\r\n        : null\r\n    }\r\n  </>\r\n\r\n// Setting input group ---------------------------------------------------------\r\n\r\nconst SettingGroupIcon = ({ icon, fallbackIcon, tooltip, unit }) => {\r\n  const addon = createRef()\r\n  return (\r\n    <>\r\n      <div className=\"input-group-prepend\" ref={ addon }>\r\n        <InputGroupText>\r\n          <Icon fixedWidth icon={ icon } fallback={ fallbackIcon } />\r\n        </InputGroupText>\r\n      </div>\r\n      {\r\n        tooltip\r\n        ? <UncontrolledTooltip\r\n            target={ addon }\r\n            placement=\"left\"\r\n            delay={{ show: 0, hide: 150 }}\r\n          >\r\n            { tooltip }\r\n            { unit && <span className=\"text-muted\"> ({ unit })</span> }\r\n          </UncontrolledTooltip>\r\n        : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nconst SettingGroupControl = ({ model, ...props }) =>\r\n  <Field\r\n    name={ model }\r\n    component={ Input }\r\n    className=\"text-monospace\"\r\n    { ...props }\r\n  />\r\n\r\nconst GlobalSettings = ({ activeItem }) =>\r\n  <>\r\n    <Row form>\r\n      <Col>\r\n        <FormGroup>\r\n          <InputGroup>\r\n            <SettingGroupIcon\r\n              icon=\"arrow-from-left\"\r\n              fallbackIcon=\"play-circle\"\r\n              tooltip=\"Start\"\r\n              unit=\"ms\"\r\n            />\r\n            <SettingGroupControl\r\n              model={ `timeline[${ activeItem }].start` }\r\n              pattern={ numberOrPlaceholder }\r\n            />\r\n            <SettingGroupIcon\r\n              icon=\"arrow-to-right\"\r\n              fallbackIcon=\"stop-circle\"\r\n              tooltip=\"End\"\r\n              unit=\"ms\"\r\n            />\r\n            <SettingGroupControl\r\n              model={ `timeline[${ activeItem }].stop` }\r\n              pattern={ numberOrPlaceholder }\r\n            />\r\n            <SettingGroupIcon\r\n              icon=\"volume\"\r\n              tooltip=\"Gain\"\r\n              unit=\"fraction\"\r\n            />\r\n            <SettingGroupControl\r\n              model={ `timeline[${ activeItem }].gain` }\r\n              placeholder=\"gain\"\r\n              pattern={ numberOrPlaceholder }\r\n            />\r\n          </InputGroup>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <InputGroup>\r\n            <SettingGroupIcon\r\n              icon=\"location-arrow\"\r\n              tooltip=\"Panning\"\r\n              unit=\"-1 … +1\"\r\n            />\r\n            <SettingGroupControl\r\n              model={ `timeline[${ activeItem }].pan` }\r\n              placeholder=\"pan\"\r\n              pattern={ numberOrPlaceholder }\r\n            />\r\n            <SettingGroupIcon\r\n              icon=\"plane-departure\"\r\n              tooltip=\"Ramp up duration\"\r\n              unit=\"ms\"\r\n            />\r\n            <SettingGroupControl\r\n              model={ `timeline[${ activeItem }].rampUp` }\r\n              placeholder=\"0\"\r\n              pattern={ numberOrPlaceholder }\r\n            />\r\n            <SettingGroupIcon\r\n              icon=\"plane-arrival\"\r\n              tooltip=\"Ramp down duration\"\r\n              unit=\"ms\"\r\n            />\r\n            <SettingGroupControl\r\n              model={ `timeline[${ activeItem }].rampDown` }\r\n              placeholder=\"0\"\r\n              pattern={ numberOrPlaceholder }\r\n            />\r\n          </InputGroup>\r\n        </FormGroup>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n\r\nconst SoundForm = ({ activeItem }, { id }) =>\r\n  <>\r\n    <GlobalSettings activeItem={ activeItem } />\r\n    <Row form>\r\n      <Col>\r\n        <FormGroup>\r\n          <FileSelectorField\r\n            name={ `timeline[${ activeItem }].payload.src` }\r\n            accept=\"audio/*,video/ogg\"\r\n            icon=\"file-audio\"\r\n            component={ id }\r\n          />\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <InputGroup>\r\n            <SettingGroupIcon\r\n              icon=\"repeat\"\r\n              fallbackIcon=\"redo\"\r\n              tooltip=\"Loop audio\"\r\n              unit=\"boolean\"\r\n            />\r\n            <Field\r\n              name={ `timeline[${ activeItem }].payload.loop` }\r\n              as=\"select\"\r\n              className=\"form-control custom-select text-monospace\"\r\n            >\r\n              <option value=\"false\">Play sound once</option>\r\n              <option value=\"true\">Repeat continuously</option>\r\n            </Field>\r\n          </InputGroup>\r\n        </FormGroup>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col>\r\n        <small className=\"text-muted\">Please note that, for security reasons, audio files must be either embedded in the study, hosted on the same server on which the study is running, or on a server with <a href=\"https://enable-cors.org/server.html\" target=\"_blank\" rel=\"noopener noreferrer\">cross-origin resource sharing</a> enabled. Please also note that Chrome and Safari do not support loading sounds offline; please consider hosting the study on a server instead.</small>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n\r\nSoundForm.contextTypes = {\r\n  id: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n}\r\n\r\nconst OscillatorForm = ({ activeItem }) =>\r\n  <>\r\n    <GlobalSettings activeItem={ activeItem } />\r\n    <Row form>\r\n      <Col>\r\n        <FormGroup>\r\n          <InputGroup>\r\n            <SettingGroupIcon\r\n              icon=\"integral\" fallbackIcon=\"water\"\r\n              tooltip=\"Waveform\"\r\n            />\r\n            <Field\r\n              name={ `timeline[${ activeItem }].payload.type` }\r\n              as=\"select\"\r\n              className=\"text-monospace form-control custom-select\"\r\n            >\r\n              <option value=\"sine\">Sine wave</option>\r\n              <option value=\"square\">Square wave</option>\r\n              <option value=\"sawtooth\">Sawtooth</option>\r\n              <option value=\"triangle\">Triangle</option>\r\n            </Field>\r\n          </InputGroup>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <InputGroup>\r\n            <SettingGroupIcon\r\n              icon=\"music\"\r\n              tooltip=\"Frequency\"\r\n              unit=\"Hz\"\r\n            />\r\n            <SettingGroupControl\r\n              model={ `timeline[${ activeItem }].payload.frequency` }\r\n              placeholder=\"frequency (Hz)\"\r\n              pattern={ numberOrPlaceholder }\r\n            />\r\n            <SettingGroupIcon\r\n              icon=\"tachometer-average\"\r\n              tooltip=\"Detune\"\r\n              unit=\"cents\"\r\n            />\r\n            <SettingGroupControl\r\n              model={ `timeline[${ activeItem }].payload.detune` }\r\n              placeholder=\"detune (cents)\"\r\n              pattern={ numberOrPlaceholder }\r\n            />\r\n          </InputGroup>\r\n        </FormGroup>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n\r\n\r\nconst TypeForm = ({ activeItem, item, handleChange }) => {\r\n  switch (item.type) {\r\n    case 'oscillator':\r\n      return <OscillatorForm\r\n        activeItem={ activeItem }\r\n        item={ item }\r\n        handleChange={ handleChange }\r\n      />\r\n    case 'sound':\r\n      return <SoundForm\r\n        activeItem={ activeItem }\r\n        item={ item }\r\n        handleChange={ handleChange }\r\n      />\r\n    default:\r\n      return null\r\n  }\r\n}\r\n\r\nconst ItemForm = ({ timeline, activeItem, handleChange,\r\n  add, duplicateCurrent, deleteCurrent\r\n}) =>\r\n  <CardBody>\r\n    <Header\r\n      activeItem={ activeItem }\r\n      item={ activeItem !== undefined ? timeline[activeItem] : undefined }\r\n      add={ add }\r\n      duplicateCurrent={ duplicateCurrent }\r\n      deleteCurrent={ deleteCurrent }\r\n    />\r\n    {\r\n      activeItem !== undefined\r\n        ? <TypeForm\r\n            activeItem={ activeItem }\r\n            item={ timeline[activeItem] }\r\n            handleChange={ handleChange }\r\n          />\r\n        : null\r\n    }\r\n  </CardBody>\r\n\r\nexport default ItemForm\r\n","import React, { createRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Group, Text, Rect, Circle } from 'react-konva'\r\nimport { clamp } from 'lodash'\r\n\r\nimport colors from './colors'\r\n\r\nconst minWidth = 10\r\n\r\nconst Item = (\r\n  { label, priority, start, stop, active, onClick, update },\r\n  { range, calcPosition, closestLayerY, setCursor }\r\n) => {\r\n  const height = 36\r\n  const { x, y, w, lockStart, lockStop } = calcPosition(start, stop, priority)\r\n  const draggable = !lockStart && !lockStop\r\n\r\n  // Difference between absolute and relative position\r\n  // (populated and used during dragging for bound calculation)\r\n  let translationX = 0\r\n\r\n  const saveTranslation = target => {\r\n    const { x: absX } = target.getAbsolutePosition()\r\n    const { x } = target.getPosition()\r\n    translationX = absX - x\r\n  }\r\n  const clearTranslation = () => {\r\n    translationX = 0\r\n  }\r\n\r\n  // Refs\r\n  const container = createRef()\r\n  const box = createRef()\r\n  const handleRight = createRef()\r\n\r\n  return (\r\n    <Group\r\n      ref={ container }\r\n      x={ x } y={ y }\r\n      draggable={ draggable }\r\n      dragBoundFunc={ ({ x, y }) => ({\r\n        x: clamp(x - translationX, 0, range.max - w) + translationX,\r\n        y: closestLayerY(y)\r\n      }) }\r\n      onDragStart={ function() {\r\n        // UI drag cues\r\n        setCursor('grabbing')\r\n        box.current.shadowEnabled(true)\r\n\r\n        // Save translation\r\n        saveTranslation(this)\r\n      } }\r\n      onDragEnd={ () => {\r\n        // UI drag cues\r\n        box.current.shadowEnabled(active)\r\n        setCursor('grab')\r\n\r\n        // Remove translation\r\n        clearTranslation()\r\n\r\n        // Save position\r\n        const { x, y } = container.current.position()\r\n        const width = box.current.width()\r\n        update({ x, y, width })\r\n      } }\r\n    >\r\n      <Rect\r\n        ref={ box }\r\n        x={ 0.5 } y={ 0.5 }\r\n        height={ height } width={ Math.max(w, minWidth) }\r\n        cornerRadius={ 4 }\r\n        fill={ active ? colors.active : 'white' }\r\n        stroke={ active ? 'white' : colors.buttonBorder }\r\n        strokeWidth={ 1 }\r\n        onClick={ onClick }\r\n        onMouseEnter={ () => draggable && setCursor('grab') }\r\n        onMouseLeave={ () => setCursor('default') }\r\n        shadowColor=\"rgba(0, 0, 0, 0.125)\"\r\n        shadowBlur={ 8 }\r\n        shadowEnabled={ active }\r\n      />\r\n      <Text\r\n        listening={ false }\r\n        x={ 12 } y={ 12 }\r\n        text={ label }\r\n        fontFamily=\"Fira Sans\"\r\n        fontSize={ 14 }\r\n        fill={ active ? 'white' : colors.root }\r\n      />\r\n      {/* TODO: Simplify the pesky rendering offsets */}\r\n      <Circle\r\n        visible={ active && !lockStart }\r\n        listening={ active && !lockStart }\r\n        x={ 0 } y={ height/2 } radius={ 6 }\r\n        offsetX={ -0.5 }\r\n        fill={ colors.active } stroke={ 'white' } strokeWidth={ 2 }\r\n        draggable={ !lockStart }\r\n        dragBoundFunc={ ({ x: dragX }) => ({\r\n          x: clamp(dragX - translationX, 0, x + w - minWidth) + translationX,\r\n          y: closestLayerY(y) + height/2\r\n        }) }\r\n        onDragStart={ function() {\r\n          // Save translation\r\n          saveTranslation(this)\r\n        } }\r\n        onDragMove={ (e) => {\r\n          const { x: dragX } = e.target.getAbsolutePosition()\r\n          const width = w - (dragX - translationX - x)\r\n          container.current.position({ x: dragX - translationX, y })\r\n\r\n          // All other positions are relative to the container\r\n          box.current.width(width)\r\n          handleRight.current.position({ x: width, y: height/2 })\r\n        } }\r\n        onDragEnd={ () => {\r\n          clearTranslation()\r\n        } }\r\n        onMouseEnter={ () => setCursor('ew-resize') }\r\n        onMouseLeave={ () => setCursor('default') }\r\n      />\r\n      <Circle\r\n        ref={ handleRight }\r\n        visible={ active && !lockStop }\r\n        listening={ active && !lockStop }\r\n        x={ w } y={ height/2 } radius={ 6 }\r\n        offsetX={ -0.5 }\r\n        fill={ colors.active } stroke={ 'white' } strokeWidth={ 2 }\r\n        draggable={ !lockStop }\r\n        dragBoundFunc={ ({ x: dragX }) => ({\r\n          // In absolute coordinates\r\n          x: clamp(dragX - translationX,\r\n              x + minWidth,\r\n              range.max\r\n            ) + translationX,\r\n          y: closestLayerY(y) + height/2\r\n        }) }\r\n        onDragStart={ function() {\r\n          // Save translation\r\n          saveTranslation(this)\r\n        } }\r\n        onDragMove={ (e) => {\r\n          box.current.width(\r\n            // Remove circle offset\r\n            e.target.getAbsolutePosition().x - translationX - x\r\n          )\r\n        } }\r\n        onDragEnd={ () => {\r\n          clearTranslation()\r\n        } }\r\n        onMouseEnter={ () => setCursor('ew-resize') }\r\n        onMouseLeave={ () => setCursor('default') }\r\n      />\r\n    </Group>\r\n  )\r\n}\r\n\r\nItem.contextTypes = {\r\n  range: PropTypes.object,\r\n  width: PropTypes.number,\r\n  calcPosition: PropTypes.func,\r\n  closestLayerY: PropTypes.func,\r\n  setCursor: PropTypes.func,\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Layer, Rect } from 'react-konva'\r\nimport { capitalize } from 'lodash'\r\n\r\nimport Item from './item'\r\n\r\nconst ItemLayer = (\r\n  { timeline, activeItem, setActive, updateItem },\r\n  { width, height }\r\n) =>\r\n  <Layer>\r\n    {/* TODO: This is a bit of a hack,\r\n        it would be nicer to capture clicks on the underlying stage */}\r\n    <Rect\r\n      x={ 0 } y={ 0 }\r\n      width={ width } height={ height }\r\n      onClick={ () => setActive(undefined) }\r\n    />\r\n    {\r\n      timeline.map((item, i) =>\r\n        <Item\r\n          key={ `timelineitem-${ i }` }\r\n          label={ item.type ? capitalize(item.type) : '?' }\r\n          start={ item.start }\r\n          stop={ item.stop }\r\n          priority={ item.priority }\r\n          active={ activeItem === i }\r\n          onClick={ () => setActive(i) }\r\n          update={ pos => updateItem(i, pos) }\r\n        />\r\n      )\r\n    }\r\n  </Layer>\r\n\r\nItemLayer.contextTypes = {\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n}\r\n\r\nexport default ItemLayer\r\n","import React, { Component, createRef } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { clamp, sortBy } from 'lodash'\r\nimport { Stage } from 'react-konva'\r\n\r\nimport BackgroundLayer from './backgroundLayer'\r\nimport ItemLayer from './itemLayer'\r\nimport ItemForm from './itemForm'\r\nimport { connect } from 'react-redux'\r\n\r\nclass TimelineStage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      width: 0, offset: 0,\r\n      activeItem: undefined,\r\n      zoom: props.zoom,\r\n    }\r\n\r\n    // Bindings\r\n    this.calcPosition = this.calcPosition.bind(this)\r\n    this.toX = this.toX.bind(this)\r\n    this.closestLayerY = this.closestLayerY.bind(this)\r\n    this.setActive = this.setActive.bind(this)\r\n    this.setCursor = this.setCursor.bind(this)\r\n    this.setZoom = this.setZoom.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.updateItem = this.updateItem.bind(this)\r\n    this.handleAdd = this.handleAdd.bind(this)\r\n    this.handleDuplicateCurrent = this.handleDuplicateCurrent.bind(this)\r\n    this.handleDeleteCurrent = this.handleDeleteCurrent.bind(this)\r\n\r\n    // Refs\r\n    this.stage = createRef()\r\n    this.wrapper = createRef()\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Calculate available space\r\n    this.setState({\r\n      width: this.wrapper.current.clientWidth,\r\n    })\r\n  }\r\n\r\n  getChildContext() {\r\n    return {\r\n      range: this.props.range,\r\n      zoom: this.state.zoom,\r\n      toX: this.toX,\r\n      width: this.state.width,\r\n      height: this.props.height,\r\n      padding: this.props.padding,\r\n      calcPosition: this.calcPosition,\r\n      closestLayerY: this.closestLayerY,\r\n      setCursor: this.setCursor,\r\n      setZoom: this.setZoom,\r\n    }\r\n  }\r\n\r\n  // Position math -------------------------------------------------------------\r\n\r\n  toX(t, zoom=this.state.zoom) {\r\n    return t / 10**zoom\r\n  }\r\n\r\n  toTime(x, zoom=this.state.zoom) {\r\n    return x * 10**zoom\r\n  }\r\n\r\n  calcPosition(start, stop, layer) {\r\n    return {\r\n      x: this.toX(parseInt(start) || 0),\r\n      y: this.layerY(layer),\r\n      w: this.toX((parseInt(stop) - parseInt(start)) || 100),\r\n      lockStart: typeof start === 'string' && start.includes('$'),\r\n      lockStop: typeof stop === 'string' && stop.includes('$'),\r\n    }\r\n  }\r\n\r\n  closestLayer(y) {\r\n    const clampedY = clamp(y,\r\n      this.props.padding,\r\n      this.props.height - 3 * this.props.padding\r\n    )\r\n\r\n    return Math.round(\r\n      (clampedY - this.props.padding) /\r\n      (this.props.layerHeight + this.props.layerGutter)\r\n    )\r\n  }\r\n\r\n  closestLayerY(y) {\r\n    return this.layerY(this.closestLayer(y))\r\n  }\r\n\r\n  layerY(layer) {\r\n    return layer * (this.props.layerHeight + this.props.layerGutter) +\r\n      this.props.padding\r\n  }\r\n\r\n  suggestPosition(item, defaultLength=100) {\r\n    const sortedItems = sortBy(\r\n      this.props.data,\r\n      [i => i.start, i => i.priority]\r\n    )\r\n    const nLayers = this.closestLayer(this.props.height) + 1\r\n\r\n    const lastEntry = sortedItems.length > 0\r\n      ? sortedItems[sortedItems.length - 1]\r\n      : { stop: 0, priority: -1 }\r\n\r\n    return {\r\n      ...item,\r\n      start: item.start || lastEntry.stop,\r\n      stop: item.stop || lastEntry.stop + defaultLength,\r\n      priority: item.priority || (lastEntry.priority + 1) % nLayers,\r\n    }\r\n  }\r\n\r\n  // UI interaction ------------------------------------------------------------\r\n\r\n  setActive(item) {\r\n    if (item !== this.state.activeItem) {\r\n      this.setState({ activeItem: item })\r\n    }\r\n  }\r\n\r\n  setCursor(cursor) {\r\n    this.stage.current.container().style.cursor = cursor\r\n  }\r\n\r\n  setZoom(level) {\r\n    // We try to keep the center centered, changing only the scale\r\n    const currentCenter = this.toTime(\r\n      -1 * (this.stage.current.x() - this.state.width / 2)\r\n      // The horizontal offset is always negative because the underlying\r\n      // coordinate system is shifted into the opposite direction\r\n    )\r\n    // So the new horizontal offset retains the former center position,\r\n    // accounting for the future timeline width, at the new zoom level\r\n    const newOffset = currentCenter - this.toTime(this.state.width / 2, level)\r\n\r\n    // Make sure that the timeline bounds are applied\r\n    const clampedOffset = clamp(\r\n      this.toX(newOffset, level),\r\n      this.toX(0, level), // Padding is already applied through stage offset\r\n      this.toX(this.props.range.max, level) - this.state.width\r\n    )\r\n\r\n    this.setState({\r\n      zoom: level,\r\n      offset: -clampedOffset, // Reverse sign once more\r\n    })\r\n  }\r\n\r\n  // Store/form interaction ----------------------------------------------------\r\n\r\n  handleChange(name, value) {\r\n    // TODO: Figure out whether to propagate changes via formik\r\n    // or via Redux, or if the combination is necessary here\r\n    // (vs. a relict from RRF times)\r\n    this.props.formikContext.setFieldValue(\r\n      `timeline[${ this.state.activeItem }].${ name }`,\r\n      value,\r\n    )\r\n  }\r\n\r\n  updateItem(item, { x, y, width }) {\r\n    this.props.updateTimelineItem(\r\n      this.context.id, item, {\r\n        start: this.toTime(x),\r\n        stop: this.toTime(x + width),\r\n        priority: this.closestLayer(y)\r\n      }\r\n    )\r\n  }\r\n\r\n  handleAdd(item) {\r\n    this.props.formikContext.setFieldValue(\r\n      'timeline', [...this.props.data, this.suggestPosition(item)]\r\n    )\r\n    setImmediate(\r\n      () => this.setState({\r\n        activeItem: this.props.data.length - 1\r\n      })\r\n    )\r\n  }\r\n\r\n  handleDuplicateCurrent() {\r\n    if (this.state.activeItem !== undefined) {\r\n      const original = this.props.data[this.state.activeItem]\r\n      this.handleAdd({\r\n        ...original,\r\n        // Remove location information\r\n        start: undefined, stop: undefined, priority: undefined,\r\n        // Duplicate payload\r\n        payload: { ...original.payload },\r\n        // TODO: Preserve duration during duplication\r\n      })\r\n    }\r\n  }\r\n\r\n  handleDeleteCurrent() {\r\n    if (this.state.activeItem !== undefined) {\r\n      this.setState({ activeItem: undefined })\r\n      this.props.formikContext.setFieldValue(\r\n        'timeline',\r\n        this.props.data.filter((item, i) => i !== this.state.activeItem)\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { width, offset } = this.state\r\n    const { data, range, height, padding } = this.props\r\n\r\n    return (\r\n      <div ref={ this.wrapper }>\r\n        <Stage\r\n          ref={ this.stage }\r\n          width={ width } height={ height }\r\n          x={ offset } // Stage scroll/viewBox offset (changes w/ scrolling)\r\n          offsetX={ -padding } // Horizontal axis offset (constant)\r\n          draggable={ true }\r\n          onDragEnd={ () => null } // Avoid warning for missing drag handler\r\n          dragBoundFunc={ ({ x }) => ({\r\n            x: clamp(x,\r\n              // Sign reversed because the right-hand side\r\n              // is dragged leftward, and vice versa.\r\n              -(this.toX(range.max) - width + padding),\r\n              -(this.toX(range.min, 0) + padding)\r\n              // (the left bound is somewhat hackish -- this scales the\r\n              // left-side padding to 100ms at zoom level zero, though\r\n              // this breaks down at higher levels)\r\n            ),\r\n            y: 0\r\n          }) }\r\n          className=\"border-bottom\"\r\n        >\r\n          <BackgroundLayer\r\n            listening={ false }\r\n          />\r\n          <ItemLayer\r\n            timeline={ data || [] }\r\n            activeItem={ this.state.activeItem }\r\n            updateItem={ this.updateItem }\r\n            setActive={ this.setActive }\r\n          />\r\n        </Stage>\r\n        <ItemForm\r\n          timeline={ data || [] }\r\n          handleChange={ this.handleChange }\r\n          updateItem={ this.updateItem }\r\n          activeItem={ this.state.activeItem }\r\n          setActive={ this.setActive }\r\n          add={ this.handleAdd }\r\n          duplicateCurrent={ this.handleDuplicateCurrent }\r\n          deleteCurrent={ this.handleDeleteCurrent }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTimelineStage.defaultProps = {\r\n  height: 200,\r\n  padding: 20,\r\n  layerHeight: 30,\r\n  layerGutter: 20,\r\n  range: { min: -100, max: 30000 },\r\n  zoom: 0,\r\n}\r\n\r\nTimelineStage.contextTypes = {\r\n  id: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]),\r\n}\r\n\r\nTimelineStage.childContextTypes = {\r\n  range: PropTypes.object,\r\n  zoom: PropTypes.number,\r\n  toX: PropTypes.func,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  padding: PropTypes.number,\r\n  calcPosition: PropTypes.func,\r\n  closestLayerY: PropTypes.func,\r\n  setCursor: PropTypes.func,\r\n  setZoom: PropTypes.func,\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateTimelineItem: (id, item, { start, stop, priority }) => ({\r\n    type: 'UPDATE_TIMELINE_ITEM',\r\n    id, item,\r\n    data: { start, stop, priority },\r\n  })\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TimelineStage)\r\n"],"sourceRoot":""}